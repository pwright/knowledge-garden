description: Schema for the Skupper Router management model. See skrouter.json.readme.txt.
prefix: io.skupper.router
entityTypes.entity.description: Base entity type for all entities.
entityTypes.entity.attributes.name.type: string
entityTypes.entity.attributes.name.unique: true
entityTypes.entity.attributes.name.description: Unique name optionally assigned by user. Can be changed.
entityTypes.entity.attributes.name.create: true
entityTypes.entity.attributes.identity.type: string
entityTypes.entity.attributes.identity.unique: true
entityTypes.entity.attributes.identity.description: Unique identity generated by the system. Will not change.
entityTypes.entity.attributes.type.type: string
entityTypes.entity.attributes.type.required: true
entityTypes.entity.attributes.type.description: Management entity type.
entityTypes.entity.attributes.type.create: true
entityTypes.entity.operationDefs.CREATE.description: Create a new entity.
entityTypes.entity.operationDefs.CREATE.request.properties.name.description: Name of new entity. Optional, defaults to identity.
entityTypes.entity.operationDefs.CREATE.request.properties.name.type: string
entityTypes.entity.operationDefs.CREATE.request.properties.type.description: Type of new entity.
entityTypes.entity.operationDefs.CREATE.request.properties.type.type: string
entityTypes.entity.operationDefs.CREATE.request.properties.type.required: true
entityTypes.entity.operationDefs.CREATE.request.body.description: Attributes for the new entity. Can include name and/or type.
entityTypes.entity.operationDefs.CREATE.request.body.type: map
entityTypes.entity.operationDefs.CREATE.request.body.required: true
entityTypes.entity.operationDefs.CREATE.response.body.description: Attributes of the entity
entityTypes.entity.operationDefs.CREATE.response.body.type: map
entityTypes.entity.operationDefs.READ.description: Read attributes of a single entity
entityTypes.entity.operationDefs.READ.request.properties.name.description: Name of desired entity. Must supply name or identity.
entityTypes.entity.operationDefs.READ.request.properties.name.type: string
entityTypes.entity.operationDefs.READ.request.properties.identity.description: Identity of desired entity. Must supply name or identity.
entityTypes.entity.operationDefs.READ.request.properties.identity.type: string
entityTypes.entity.operationDefs.READ.request.properties.type.description: Type of desired entity.
entityTypes.entity.operationDefs.READ.request.properties.type.type: string
entityTypes.entity.operationDefs.READ.response.body.description: Attributes of the entity
entityTypes.entity.operationDefs.READ.response.body.type: map
entityTypes.entity.operationDefs.UPDATE.description: Update attributes of an entity
entityTypes.entity.operationDefs.UPDATE.request.properties.name.description: Name of desired entity. Must supply name or identity.
entityTypes.entity.operationDefs.UPDATE.request.properties.name.type: string
entityTypes.entity.operationDefs.UPDATE.request.properties.identity.description: Identity of desired entity. Must supply name or identity.
entityTypes.entity.operationDefs.UPDATE.request.properties.identity.type: string
entityTypes.entity.operationDefs.UPDATE.request.properties.type.description: Type of desired entity.
entityTypes.entity.operationDefs.UPDATE.request.properties.type.type: string
entityTypes.entity.operationDefs.UPDATE.request.body.description: Attributes to update for the entity. Can include name or identity.
entityTypes.entity.operationDefs.UPDATE.request.body.type: map
entityTypes.entity.operationDefs.UPDATE.response.body.description: Updated attributes of the entity
entityTypes.entity.operationDefs.UPDATE.response.body.type: map
entityTypes.entity.operationDefs.DELETE.description: Delete an entity
entityTypes.entity.operationDefs.DELETE.request.properties.name.description: Name of desired entity. Must supply name or identity.
entityTypes.entity.operationDefs.DELETE.request.properties.name.type: string
entityTypes.entity.operationDefs.DELETE.request.properties.identity.description: Identity of desired entity. Must supply name or identity.
entityTypes.entity.operationDefs.DELETE.request.properties.identity.type: string
entityTypes.entity.operationDefs.DELETE.request.properties.type.description: Type of desired entity.
entityTypes.entity.operationDefs.DELETE.request.properties.type.type: string
entityTypes.org.amqp.management.description: The standard AMQP management node interface.
entityTypes.org.amqp.management.fullName: true
entityTypes.org.amqp.management.extends: operationalEntity
entityTypes.org.amqp.management.operations.0: QUERY
entityTypes.org.amqp.management.operations.1: GET-TYPES
entityTypes.org.amqp.management.operations.2: GET-ANNOTATIONS
entityTypes.org.amqp.management.operations.3: GET-OPERATIONS
entityTypes.org.amqp.management.operations.4: GET-ATTRIBUTES
entityTypes.org.amqp.management.operations.5: GET-MGMT-NODES
entityTypes.org.amqp.management.operationDefs.QUERY.description: Query for attribute values of multiple entities.
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.identity.description: Set to the value `self`
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.identity.type: string
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.entityType.description: If set, restrict query results to entities that extend (directly or indirectly) this type
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.entityType.type: string
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.offset.description: If set, specifies the number of the first element of the result set to be returned.
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.offset.type: integer
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.offset.default: 0
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.count.description: If set, specifies the number of entries from the result set to return. If not set return all from `offset`
entityTypes.org.amqp.management.operationDefs.QUERY.request.properties.count.type: integer
entityTypes.org.amqp.management.operationDefs.QUERY.request.body.description: A map containing the key `attributeNames` with value a list of (string) attribute names to return. If the list or the map is empty or the body is missing all attributes are returned.
entityTypes.org.amqp.management.operationDefs.QUERY.request.body.type: map
entityTypes.org.amqp.management.operationDefs.QUERY.response.properties.identity.description: Set to the value `self`
entityTypes.org.amqp.management.operationDefs.QUERY.response.properties.identity.type: string
entityTypes.org.amqp.management.operationDefs.QUERY.response.properties.count.description: Number of results returned
entityTypes.org.amqp.management.operationDefs.QUERY.response.properties.count.type: integer
entityTypes.org.amqp.management.operationDefs.QUERY.response.body.description: A map with two entries. `attributeNames` is a list of the attribute names returned. `results` is a list of lists each containing the attribute values for a single entity in the same order as the names in the `attributeNames` entry. If an attribute name is not applicable for an entity then the corresponding value is `null`
entityTypes.org.amqp.management.operationDefs.QUERY.response.body.type: map
entityTypes.org.amqp.management.operationDefs.GET-TYPES.description: Get the set of entity types and their inheritance relationships
entityTypes.org.amqp.management.operationDefs.GET-TYPES.request.properties.identity.description: Set to the value `self`
entityTypes.org.amqp.management.operationDefs.GET-TYPES.request.properties.identity.type: string
entityTypes.org.amqp.management.operationDefs.GET-TYPES.request.properties.entityType.description: If set, restrict query results to entities that extend (directly or indirectly) this type
entityTypes.org.amqp.management.operationDefs.GET-TYPES.request.properties.entityType.type: string
entityTypes.org.amqp.management.operationDefs.GET-TYPES.response.body.description: A map where each key is an entity type name (string) and the corresponding value is the list of the entity types (strings) that it extends.
entityTypes.org.amqp.management.operationDefs.GET-TYPES.response.body.type: map
entityTypes.org.amqp.management.operationDefs.GET-OPERATIONS.description: Get the set of entity types and the operations they support
entityTypes.org.amqp.management.operationDefs.GET-OPERATIONS.request.properties.identity.description: Set to the value `self`
entityTypes.org.amqp.management.operationDefs.GET-OPERATIONS.request.properties.identity.type: string
entityTypes.org.amqp.management.operationDefs.GET-OPERATIONS.request.properties.entityType.description: If set, restrict query results to entities that extend (directly or indirectly) this type
entityTypes.org.amqp.management.operationDefs.GET-OPERATIONS.request.properties.entityType.type: string
entityTypes.org.amqp.management.operationDefs.GET-OPERATIONS.response.body.description: A map where each key is an entity type name (string) and the corresponding value is the list of operation names (strings) that it supports.
entityTypes.org.amqp.management.operationDefs.GET-OPERATIONS.response.body.type: map
entityTypes.org.amqp.management.operationDefs.GET-ANNOTATIONS.request.properties.identity.description: Set to the value `self`
entityTypes.org.amqp.management.operationDefs.GET-ANNOTATIONS.request.properties.identity.type: string
entityTypes.org.amqp.management.operationDefs.GET-ANNOTATIONS.request.properties.entityType.description: If set, restrict query results to entities that extend (directly or indirectly) this type
entityTypes.org.amqp.management.operationDefs.GET-ANNOTATIONS.request.properties.entityType.type: string
entityTypes.org.amqp.management.operationDefs.GET-ANNOTATIONS.response.body.description: A map where each key is an entity type name (string) and the corresponding value is the list of annotations (strings) that it  implements.
entityTypes.org.amqp.management.operationDefs.GET-ANNOTATIONS.response.body.type: map
entityTypes.org.amqp.management.operationDefs.GET-ATTRIBUTES.description: Get the set of entity types
entityTypes.org.amqp.management.operationDefs.GET-ATTRIBUTES.request.properties.identity.description: Set to the value `self`
entityTypes.org.amqp.management.operationDefs.GET-ATTRIBUTES.request.properties.identity.type: string
entityTypes.org.amqp.management.operationDefs.GET-ATTRIBUTES.request.properties.entityType.description: If set, restrict query results to entities that extend (directly or indirectly) this type
entityTypes.org.amqp.management.operationDefs.GET-ATTRIBUTES.request.properties.entityType.type: string
entityTypes.org.amqp.management.operationDefs.GET-ATTRIBUTES.response.body.description: A map where each key is an entity type name (string) and the corresponding value is a list (of strings) of attributes on that entity type.
entityTypes.org.amqp.management.operationDefs.GET-ATTRIBUTES.response.body.type: map
entityTypes.org.amqp.management.operationDefs.GET-MGMT-NODES.description: Get the addresses of all management nodes known to this router
entityTypes.org.amqp.management.operationDefs.GET-MGMT-NODES.request.properties.identity.description: Set to the value `self`
entityTypes.org.amqp.management.operationDefs.GET-MGMT-NODES.request.properties.identity.type: string
entityTypes.org.amqp.management.operationDefs.GET-MGMT-NODES.response.body.description: A list of addresses (strings) of management nodes known to this management node.
entityTypes.org.amqp.management.operationDefs.GET-MGMT-NODES.response.body.type: list
entityTypes.management.description: Qpid Dispatch Router extensions to the standard org.amqp.management interface.
entityTypes.management.extends: org.amqp.management
entityTypes.management.singleton: true
entityTypes.management.operations.0: GET-SCHEMA
entityTypes.management.operations.1: GET-JSON-SCHEMA
entityTypes.management.operations.2: GET-LOG
entityTypes.management.operations.3: PROFILE
entityTypes.management.operationDefs.GET-SCHEMA.description: Get the skrouterd schema for this router in AMQP map format
entityTypes.management.operationDefs.GET-SCHEMA.request.properties.identity.description: Set to the value `self`
entityTypes.management.operationDefs.GET-SCHEMA.request.properties.identity.type: string
entityTypes.management.operationDefs.GET-SCHEMA.response.body.description: The skrouter schema as a map.
entityTypes.management.operationDefs.GET-SCHEMA.response.body.type: map
entityTypes.management.operationDefs.GET-SCHEMA-JSON.description: Get the skrouterd schema for this router in JSON format
entityTypes.management.operationDefs.GET-SCHEMA-JSON.request.properties.identity.description: Set to the value `self`
entityTypes.management.operationDefs.GET-SCHEMA-JSON.request.properties.identity.type: string
entityTypes.management.operationDefs.GET-SCHEMA-JSON.request.properties.indent.description: Number of spaces to indent the formatted result. If not specified, the result is in minimal format, no unnecessary spaces or newlines.
entityTypes.management.operationDefs.GET-SCHEMA-JSON.request.properties.indent.type: integer
entityTypes.management.operationDefs.GET-SCHEMA-JSON.response.body.description: The skrouter schema as a JSON string.
entityTypes.management.operationDefs.GET-SCHEMA-JSON.response.body.type: string
entityTypes.management.operationDefs.GET-LOG.description: Get recent log entries from the router.
entityTypes.management.operationDefs.GET-LOG.request.properties.identity.description: Set to the value `self`
entityTypes.management.operationDefs.GET-LOG.request.properties.identity.type: string
entityTypes.management.operationDefs.GET-LOG.request.properties.limit.description: Maximum number of log entries to get.
entityTypes.management.operationDefs.GET-LOG.request.properties.limit.type: integer
entityTypes.management.operationDefs.GET-LOG.response.body.description: 'A list of log entries where each entry is a list of: module name(string), level name(string), message text(string), file name(string or None), line number(integer or None) , timestamp(integer)'
entityTypes.management.operationDefs.GET-LOG.response.body.type: string
entityTypes.configurationEntity.description: Base type for entities containing configuration information.
entityTypes.configurationEntity.extends: entity
entityTypes.configurationEntity.operations.0: READ
entityTypes.operationalEntity.description: Base type for entities containing current operational information.
entityTypes.operationalEntity.extends: entity
entityTypes.operationalEntity.operations.0: READ
entityTypes.router.description: Tracks peer routers and computes routes to destinations. This entity is mandatory. The router will not start without this entity.
entityTypes.router.extends: configurationEntity
entityTypes.router.singleton: true
entityTypes.router.attributes.id.description: Router's unique identity. This field may not contain whitespace or control characters. If not specified, a random identity will be assigned at startup.
entityTypes.router.attributes.id.type: string
entityTypes.router.attributes.id.required: false
entityTypes.router.attributes.id.create: true
entityTypes.router.attributes.mode.type.0: standalone
entityTypes.router.attributes.mode.type.1: interior
entityTypes.router.attributes.mode.type.2: edge
entityTypes.router.attributes.mode.default: standalone
entityTypes.router.attributes.mode.description: In standalone mode, the router operates as a single component.  It does not participate in the routing protocol and therefore will not cooperate with other routers. In interior mode, the router operates in cooperation with other interior routers in an interconnected network.  In edge mode, the router can make a connection to an interior router and join a network without causing that network to recompute paths.
entityTypes.router.attributes.mode.create: true
entityTypes.router.attributes.area.type: string
entityTypes.router.attributes.area.description: Unused placeholder.
entityTypes.router.attributes.area.default: 0
entityTypes.router.attributes.version.type: string
entityTypes.router.attributes.version.description: Software Version
entityTypes.router.attributes.hostName.type: string
entityTypes.router.attributes.hostName.description: hostName of machine on which router is running
entityTypes.router.attributes.helloIntervalSeconds.type: integer
entityTypes.router.attributes.helloIntervalSeconds.default: 1
entityTypes.router.attributes.helloIntervalSeconds.description: Interval in seconds between HELLO messages sent to neighbor routers.
entityTypes.router.attributes.helloIntervalSeconds.create: true
entityTypes.router.attributes.helloMaxAgeSeconds.type: integer
entityTypes.router.attributes.helloMaxAgeSeconds.default: 3
entityTypes.router.attributes.helloMaxAgeSeconds.description: Time in seconds after which a neighbor is declared lost if no HELLO is received.
entityTypes.router.attributes.helloMaxAgeSeconds.create: true
entityTypes.router.attributes.raIntervalSeconds.type: integer
entityTypes.router.attributes.raIntervalSeconds.default: 30
entityTypes.router.attributes.raIntervalSeconds.description: Interval in seconds between Router-Advertisements sent to all routers in a stable network.
entityTypes.router.attributes.raIntervalSeconds.create: true
entityTypes.router.attributes.raIntervalFluxSeconds.type: integer
entityTypes.router.attributes.raIntervalFluxSeconds.default: 4
entityTypes.router.attributes.raIntervalFluxSeconds.description: Interval in seconds between Router-Advertisements sent to all routers during topology fluctuations.
entityTypes.router.attributes.raIntervalFluxSeconds.create: true
entityTypes.router.attributes.remoteLsMaxAgeSeconds.type: integer
entityTypes.router.attributes.remoteLsMaxAgeSeconds.default: 60
entityTypes.router.attributes.remoteLsMaxAgeSeconds.description: Time in seconds after which link state is declared stale if no RA is received.
entityTypes.router.attributes.remoteLsMaxAgeSeconds.create: true
entityTypes.router.attributes.workerThreads.type: integer
entityTypes.router.attributes.workerThreads.default: 4
entityTypes.router.attributes.workerThreads.description: The number of threads that will be created to process message traffic and other application work (timers, non-amqp file descriptors, etc.) .
entityTypes.router.attributes.workerThreads.create: true
entityTypes.router.attributes.debugDumpFile.type: path
entityTypes.router.attributes.debugDumpFile.description: The absolute path to the location for the debug dump file. The router writes debug-level information to this file if the logger is not available.
entityTypes.router.attributes.debugDumpFile.create: true
entityTypes.router.attributes.saslConfigDir.type: path
entityTypes.router.attributes.saslConfigDir.description: Absolute path to the SASL configuration file.
entityTypes.router.attributes.saslConfigDir.required: false
entityTypes.router.attributes.saslConfigDir.create: true
entityTypes.router.attributes.saslConfigName.type: string
entityTypes.router.attributes.saslConfigName.description: Name of the SASL configuration.  This string + '.conf' is the name of the configuration file.
entityTypes.router.attributes.saslConfigName.default: skrouterd
entityTypes.router.attributes.saslConfigName.required: false
entityTypes.router.attributes.saslConfigName.create: true
entityTypes.router.attributes.timestampsInUTC.type: boolean
entityTypes.router.attributes.timestampsInUTC.description: Use UTC time rather than localtime in logs.
entityTypes.router.attributes.timestampsInUTC.create: true
entityTypes.router.attributes.timestampFormat.type: string
entityTypes.router.attributes.timestampFormat.description: Format string to use for timestamps in logs.
entityTypes.router.attributes.timestampFormat.create: true
entityTypes.router.attributes.defaultDistribution.type.0: multicast
entityTypes.router.attributes.defaultDistribution.type.1: closest
entityTypes.router.attributes.defaultDistribution.type.2: balanced
entityTypes.router.attributes.defaultDistribution.type.3: unavailable
entityTypes.router.attributes.defaultDistribution.description: Default forwarding treatment for any address without a specified treatment. multicast - one copy of each message delivered to all subscribers; closest - messages delivered to only the closest subscriber; balanced - messages delivered to one subscriber with load balanced across subscribers; unavailable - this address is unavailable, messages sent and link attaches to the address will be rejected.
entityTypes.router.attributes.defaultDistribution.create: true
entityTypes.router.attributes.defaultDistribution.required: false
entityTypes.router.attributes.defaultDistribution.default: balanced
entityTypes.router.attributes.metadata.type: string
entityTypes.router.attributes.metadata.description: Optional metadata text to describe or label this router. This text does not affect the function of the router, but it can be used by external tools (such as orchestration software) to control how the router is displayed.
entityTypes.router.attributes.metadata.create: true
entityTypes.router.attributes.metadata.required: false
entityTypes.router.attributes.plogRouterId.type: integer
entityTypes.router.attributes.plogRouterId.description: This router's identity for protocol logging
entityTypes.router.attributes.plogRouterId.create: true
entityTypes.router.attributes.plogRouterId.required: false
entityTypes.router.attributes.plogRouterId.default: 0
entityTypes.router.attributes.plogSiteId.type: integer
entityTypes.router.attributes.plogSiteId.description: This router's site-identity for protocol logging
entityTypes.router.attributes.plogSiteId.create: true
entityTypes.router.attributes.plogSiteId.required: false
entityTypes.router.attributes.plogSiteId.default: 0
entityTypes.router.attributes.addrCount.type: integer
entityTypes.router.attributes.addrCount.description: Number of addresses known to the router.
entityTypes.router.attributes.addrCount.graph: true
entityTypes.router.attributes.linkCount.type: integer
entityTypes.router.attributes.linkCount.description: Number of links attached to the router node.
entityTypes.router.attributes.linkCount.graph: true
entityTypes.router.attributes.blockedLinkCount.type: integer
entityTypes.router.attributes.blockedLinkCount.description: The number of links that are flagged as blocked.  A blocked link is one in which the available credit has remained zero for more than 10 seconds.
entityTypes.router.attributes.blockedLinkCount.graph: true
entityTypes.router.attributes.nodeCount.type: integer
entityTypes.router.attributes.nodeCount.description: Number of known peer router nodes.
entityTypes.router.attributes.nodeCount.graph: true
entityTypes.router.attributes.autoLinkCount.type: integer
entityTypes.router.attributes.autoLinkCount.description: Number of auto links attached to the router node.
entityTypes.router.attributes.autoLinkCount.graph: true
entityTypes.router.attributes.connectionCount.type: integer
entityTypes.router.attributes.connectionCount.description: Number of open connections to the router node.
entityTypes.router.attributes.connectionCount.graph: true
entityTypes.router.attributes.tcpConnectionCount.type: integer
entityTypes.router.attributes.tcpConnectionCount.description: Number of open tcp connections at this router node.
entityTypes.router.attributes.tcpConnectionCount.graph: true
entityTypes.router.attributes.presettledDeliveries.type: integer
entityTypes.router.attributes.presettledDeliveries.description: Number of presettled deliveries handled by the router.
entityTypes.router.attributes.presettledDeliveries.graph: true
entityTypes.router.attributes.droppedPresettledDeliveries.type: integer
entityTypes.router.attributes.droppedPresettledDeliveries.description: Number of presettled deliveries that were dropped by the router.
entityTypes.router.attributes.droppedPresettledDeliveries.graph: true
entityTypes.router.attributes.acceptedDeliveries.type: integer
entityTypes.router.attributes.acceptedDeliveries.description: Number of deliveries whose delivery state was set to ACCEPTED by the router. These deliveries were successfully processed by the router.
entityTypes.router.attributes.acceptedDeliveries.graph: true
entityTypes.router.attributes.rejectedDeliveries.type: integer
entityTypes.router.attributes.rejectedDeliveries.description: Number of deliveries whose delivery state was set to REJECTED by the router. These deliveries were Invalid and unprocessable.
entityTypes.router.attributes.rejectedDeliveries.graph: true
entityTypes.router.attributes.releasedDeliveries.type: integer
entityTypes.router.attributes.releasedDeliveries.description: Number of deliveries whose delivery state was set to RELEASED by the router. These deliveries was not (and will not be) processed
entityTypes.router.attributes.releasedDeliveries.graph: true
entityTypes.router.attributes.modifiedDeliveries.type: integer
entityTypes.router.attributes.modifiedDeliveries.description: Number of deliveries whose delivery state was set to MODIFIED by the router. These deliveries were modified but not processed.
entityTypes.router.attributes.modifiedDeliveries.graph: true
entityTypes.router.attributes.deliveriesDelayed1Sec.type: integer
entityTypes.router.attributes.deliveriesDelayed1Sec.graph: true
entityTypes.router.attributes.deliveriesDelayed1Sec.description: The total number of settled deliveries that were held in the router for 1 to 10 seconds.
entityTypes.router.attributes.deliveriesDelayed10Sec.type: integer
entityTypes.router.attributes.deliveriesDelayed10Sec.graph: true
entityTypes.router.attributes.deliveriesDelayed10Sec.description: The total number of settled deliveries that were held in the router for more than 10 seconds.
entityTypes.router.attributes.deliveriesStuck.type: integer
entityTypes.router.attributes.deliveriesStuck.graph: true
entityTypes.router.attributes.deliveriesStuck.description: The current number of deliveries that are unsettled and have been held in the router for more than 10 seconds.
entityTypes.router.attributes.deliveriesIngress.type: integer
entityTypes.router.attributes.deliveriesIngress.description: Number of deliveries that were sent to it by a sender that is directly attached to the router.
entityTypes.router.attributes.deliveriesIngress.graph: true
entityTypes.router.attributes.deliveriesEgress.type: integer
entityTypes.router.attributes.deliveriesEgress.description: Number of deliveries that were sent by the router to a receiver that is directly attached to the router.
entityTypes.router.attributes.deliveriesEgress.graph: true
entityTypes.router.attributes.deliveriesTransit.type: integer
entityTypes.router.attributes.deliveriesTransit.description: Number of deliveries that were sent to another router in the network.
entityTypes.router.attributes.deliveriesTransit.graph: true
entityTypes.router.attributes.deliveriesIngressRouteContainer.type: integer
entityTypes.router.attributes.deliveriesIngressRouteContainer.description: Number of deliveries that were received from router container connections.
entityTypes.router.attributes.deliveriesIngressRouteContainer.graph: true
entityTypes.router.attributes.deliveriesEgressRouteContainer.type: integer
entityTypes.router.attributes.deliveriesEgressRouteContainer.description: Number of deliveries that were sent to route container connections.
entityTypes.router.attributes.deliveriesEgressRouteContainer.graph: true
entityTypes.router.attributes.uptimeSeconds.type: integer
entityTypes.router.attributes.uptimeSeconds.graph: true
entityTypes.router.attributes.uptimeSeconds.description: The number of seconds since the router was started.
entityTypes.router.attributes.memoryUsage.type: integer
entityTypes.router.attributes.memoryUsage.graph: true
entityTypes.router.attributes.memoryUsage.description: The current amount of memory in use by the router process in bytes.  This includes memory provisioned for stack, data, and code (VmSize).  This value is set to Null if the platform does not provide access to the process memory size.
entityTypes.sslProfile.description: Attributes for setting TLS/SSL configuration for connections.
entityTypes.sslProfile.referential: true
entityTypes.sslProfile.extends: configurationEntity
entityTypes.sslProfile.operations.0: CREATE
entityTypes.sslProfile.operations.1: DELETE
entityTypes.sslProfile.attributes.ciphers.type: string
entityTypes.sslProfile.attributes.ciphers.description: Specifies the enabled ciphers so the SSL Ciphers can be hardened. In other words, use this field to disable weak ciphers. The ciphers are specified in the format understood by the OpenSSL library. For example, ciphers can be set to ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; -- The full list of allowed ciphers can be viewed using the openssl ciphers command
entityTypes.sslProfile.attributes.ciphers.create: true
entityTypes.sslProfile.attributes.protocols.type: string
entityTypes.sslProfile.attributes.protocols.description: The TLS protocols that this sslProfile can use. You can specify a list of one or more of TLSv1, TLSv1.1, or TLSv1.2. To specify multiple protocols, separate the protocols with a space. For example, to permit the sslProfile to use TLS v1.1 and TLS v1.2 only, you would set the value to TLSv1.1 TLSv1.2. If you do not specify a value, the sslProfile uses the TLS protocol specified by the system-wide configuration.
entityTypes.sslProfile.attributes.protocols.create: true
entityTypes.sslProfile.attributes.caCertFile.type: path
entityTypes.sslProfile.attributes.caCertFile.description: The absolute path to the database that contains the public certificates of trusted certificate authorities (CA).
entityTypes.sslProfile.attributes.caCertFile.create: true
entityTypes.sslProfile.attributes.certFile.type: path
entityTypes.sslProfile.attributes.certFile.description: The absolute path to the file containing the PEM-formatted public certificate to be used on the local end of any connections using this profile.
entityTypes.sslProfile.attributes.certFile.create: true
entityTypes.sslProfile.attributes.privateKeyFile.type: path
entityTypes.sslProfile.attributes.privateKeyFile.description: The absolute path to the file containing the PEM-formatted private key for the above certificate.
entityTypes.sslProfile.attributes.privateKeyFile.create: true
entityTypes.sslProfile.attributes.password.type: string
entityTypes.sslProfile.attributes.password.description: 'The password that unlocks the certificate key. You can specify the password by specifying an environment variable that stores the password, a file that stores the password, or by entering the password in clear text. To use an environment variable, specify ''password: env:<var>''. Use this option with caution, because the environment of other processes is visible on certain platforms (for example, ps on certain Unix OSs). To use a file, specify ''password: file:<absolute-path-to-file>''. This option is the most secure, because permissions can be set on the file that contains the password. To specify the password in clear text, specify ''password: pass:<password>'', or ''password: literal:<password>'', or ''password: <password>''. This option is insecure, so it should only be used if security is not a concern.'
entityTypes.sslProfile.attributes.password.create: true
entityTypes.sslProfile.attributes.uidFormat.type: string
entityTypes.sslProfile.attributes.uidFormat.description: A list of x509 client certificate fields that will be used to build a string that will uniquely identify the client certificate owner. For e.g. a value of 'cou' indicates that the uid will consist of c - common name concatenated with o - organization-company name concatenated with u - organization unit; or a value of 'o2' indicates that the uid will consist of o (organization name) concatenated with 2 (the sha256 fingerprint of the entire certificate) . Allowed values can be any combination of 'c'( ISO3166 two character country code), 's'(state or province), 'l'(Locality; generally - city), 'o'(Organization - Company Name), 'u'(Organization Unit - typically certificate type or brand), 'n'(CommonName - typically a user name for client certificates) and '1'(sha1 certificate fingerprint, as displayed in the fingerprints section when looking at a certificate with say a web browser is the hash of the entire certificate) and 2 (sha256 certificate fingerprint) and 5 (sha512 certificate fingerprint). The user identifier (uid) that is generated based on the uidFormat is a string which has a semi-colon as a separator between the components
entityTypes.sslProfile.attributes.uidFormat.create: true
entityTypes.sslProfile.attributes.uidNameMappingFile.type: string
entityTypes.sslProfile.attributes.uidNameMappingFile.description: The absolute path to the file containing the unique id to display name mapping
entityTypes.sslProfile.attributes.uidNameMappingFile.create: true
entityTypes.listener.description: Listens for incoming connections to the router.
entityTypes.listener.extends: configurationEntity
entityTypes.listener.operations.0: CREATE
entityTypes.listener.operations.1: DELETE
entityTypes.listener.attributes.host.description: A host name, IPV4 or IPV6 literal, or the empty string. The empty string listens on all local addresses. A host name listens on all addresses associated with the name. An IPV6 literal address (or wildcard '[::]') listens only for IPV6. An IPV4 literal address (or wildcard '0.0.0.0') listens only for IPV4.
entityTypes.listener.attributes.host.type: string
entityTypes.listener.attributes.host.default: ''
entityTypes.listener.attributes.host.create: true
entityTypes.listener.attributes.port.description: Port number or symbolic service name.  If '0', the router shall assign an ephemeral port to the listener and log the port number with a log of the form 'SERVER (notice) Listening on <host>:<assigned-port> (<listener-name>)'
entityTypes.listener.attributes.port.type: string
entityTypes.listener.attributes.port.default: amqp
entityTypes.listener.attributes.port.create: true
entityTypes.listener.attributes.socketAddressFamily.type.0: IPv4
entityTypes.listener.attributes.socketAddressFamily.type.1: IPv6
entityTypes.listener.attributes.socketAddressFamily.required: false
entityTypes.listener.attributes.socketAddressFamily.description: "['IPv4', 'IPv6'] IPv4: Internet Protocol version 4; IPv6: Internet Protocol version 6.  If not specified, the protocol family will be automatically determined from the address."
entityTypes.listener.attributes.socketAddressFamily.create: true
entityTypes.listener.attributes.role.type.0: normal
entityTypes.listener.attributes.role.type.1: inter-router
entityTypes.listener.attributes.role.type.2: route-container
entityTypes.listener.attributes.role.type.3: edge
entityTypes.listener.attributes.role.default: normal
entityTypes.listener.attributes.role.description: The role of an established connection. In the normal role, the connection is assumed to be used for AMQP clients that are doing normal message delivery over the connection.  In the inter-router role, the connection is assumed to be to another router in the network.  Inter-router discovery and routing protocols can only be used over inter-router connections. route-container role can be used for router-container connections, for example, a router-broker connection.  In the edge role, the connection is assumed to be between an edge router and an interior router.
entityTypes.listener.attributes.role.create: true
entityTypes.listener.attributes.cost.type: integer
entityTypes.listener.attributes.cost.default: 1
entityTypes.listener.attributes.cost.required: false
entityTypes.listener.attributes.cost.create: true
entityTypes.listener.attributes.cost.description: For the 'inter-router' role only.  This value assigns a cost metric to the inter-router connection.  The default (and minimum) value is one.  Higher values represent higher costs.  The cost is used to influence the routing algorithm as it attempts to use the path with the lowest total cost from ingress to egress.
entityTypes.listener.attributes.sslProfile.type: string
entityTypes.listener.attributes.sslProfile.required: false
entityTypes.listener.attributes.sslProfile.description: Name of the sslProfile.
entityTypes.listener.attributes.sslProfile.create: true
entityTypes.listener.attributes.saslMechanisms.type: string
entityTypes.listener.attributes.saslMechanisms.required: false
entityTypes.listener.attributes.saslMechanisms.description: Space separated list of accepted SASL authentication mechanisms.
entityTypes.listener.attributes.saslMechanisms.create: true
entityTypes.listener.attributes.authenticatePeer.type: boolean
entityTypes.listener.attributes.authenticatePeer.default: false
entityTypes.listener.attributes.authenticatePeer.description: 'yes: Require the peer''s identity to be authenticated; no: Do not require any peer authentication.'
entityTypes.listener.attributes.authenticatePeer.create: true
entityTypes.listener.attributes.requireEncryption.type: boolean
entityTypes.listener.attributes.requireEncryption.default: false
entityTypes.listener.attributes.requireEncryption.description: 'yes: Require the connection to the peer to be encrypted; no: Permit non-encrypted communication with the peer'
entityTypes.listener.attributes.requireEncryption.create: true
entityTypes.listener.attributes.requireSsl.type: boolean
entityTypes.listener.attributes.requireSsl.default: false
entityTypes.listener.attributes.requireSsl.description: 'yes: Require the use of SSL or TLS on the connection; no: Allow clients to connect without SSL or TLS.'
entityTypes.listener.attributes.requireSsl.create: true
entityTypes.listener.attributes.maxFrameSize.type: integer
entityTypes.listener.attributes.maxFrameSize.default: 16384
entityTypes.listener.attributes.maxFrameSize.description: The maximum frame size in octets that will be used in the connection-open negotiation with a connected peer.  The frame size is the largest contiguous set of uninterrupted data that can be sent for a message delivery over the connection. Interleaving of messages on different links is done at frame granularity. Policy settings, if specified, will overwrite this value. Defaults to 16384.
entityTypes.listener.attributes.maxFrameSize.create: true
entityTypes.listener.attributes.maxSessions.type: integer
entityTypes.listener.attributes.maxSessions.default: 32768
entityTypes.listener.attributes.maxSessions.description: The maximum number of sessions that can be simultaneously active on the connection. Setting this value to zero selects the default number of sessions. Policy settings, if specified, will overwrite this value. Defaults to 32768.
entityTypes.listener.attributes.maxSessions.create: true
entityTypes.listener.attributes.maxSessionFrames.type: integer
entityTypes.listener.attributes.maxSessionFrames.description: Session incoming window measured in transfer frames for sessions created on this connection. This is the number of transfer frames that may simultaneously be in flight for all links in the session. Setting this value to zero selects the default session window size. Policy settings, if specified, will overwrite this value. The numerical product of maxFrameSize and maxSessionFrames may not exceed 2^31-1. If (maxFrameSize x maxSessionFrames) exceeds 2^31-1 then maxSessionFrames is reduced to (2^31-1 / maxFrameSize). maxSessionFrames has a minimum value of 1. Defaults to 0 (unlimited window).
entityTypes.listener.attributes.maxSessionFrames.required: false
entityTypes.listener.attributes.maxSessionFrames.create: true
entityTypes.listener.attributes.idleTimeoutSeconds.type: integer
entityTypes.listener.attributes.idleTimeoutSeconds.default: 16
entityTypes.listener.attributes.idleTimeoutSeconds.description: The idle timeout, in seconds, for connections through this listener.  If no frames are received on the connection for this time interval, the connection shall be closed.
entityTypes.listener.attributes.idleTimeoutSeconds.required: false
entityTypes.listener.attributes.idleTimeoutSeconds.create: true
entityTypes.listener.attributes.initialHandshakeTimeoutSeconds.type: integer
entityTypes.listener.attributes.initialHandshakeTimeoutSeconds.default: 0
entityTypes.listener.attributes.initialHandshakeTimeoutSeconds.description: The timeout, in seconds, for the initial handshake for connections coming in through listeners.  If the time interval expires before the peer sends the AMQP OPEN frame, the connection shall be closed.  A value of zero (the default) disables this timeout.
entityTypes.listener.attributes.initialHandshakeTimeoutSeconds.required: false
entityTypes.listener.attributes.initialHandshakeTimeoutSeconds.create: true
entityTypes.listener.attributes.stripAnnotations.type.0: in
entityTypes.listener.attributes.stripAnnotations.type.1: out
entityTypes.listener.attributes.stripAnnotations.type.2: both
entityTypes.listener.attributes.stripAnnotations.type.3: 'no'
entityTypes.listener.attributes.stripAnnotations.default: both
entityTypes.listener.attributes.stripAnnotations.description: "['in', 'out', 'both', 'no'] in: Strip the dispatch router specific annotations only on ingress; out: Strip the dispatch router specific annotations only on egress; both: Strip the dispatch router specific annotations on both ingress and egress; no - do not strip dispatch router specific annotations"
entityTypes.listener.attributes.stripAnnotations.create: true
entityTypes.listener.attributes.linkCapacity.type: integer
entityTypes.listener.attributes.linkCapacity.create: true
entityTypes.listener.attributes.linkCapacity.required: false
entityTypes.listener.attributes.linkCapacity.description: The capacity of links within this connection, in terms of message deliveries.  The capacity is the number of messages that can be in-flight concurrently for each link.
entityTypes.listener.attributes.failoverUrls.type: string
entityTypes.listener.attributes.failoverUrls.create: true
entityTypes.listener.attributes.failoverUrls.required: false
entityTypes.listener.attributes.failoverUrls.description: 'A comma-separated list of failover urls to be supplied to connected clients.  Form: [(amqp|amqps|ws|wss)://]host_or_ip[:port]'
entityTypes.listener.attributes.healthz.type: boolean
entityTypes.listener.attributes.healthz.default: true
entityTypes.listener.attributes.healthz.description: Provide a simple HTTP based liveness test (using path /healthz). Assumes listener is enabled for http.
entityTypes.listener.attributes.healthz.create: true
entityTypes.listener.attributes.metrics.type: boolean
entityTypes.listener.attributes.metrics.default: true
entityTypes.listener.attributes.metrics.description: Export metrics in prometheus text format for the router (using path /metrics). Assumes listener is enabled for http.
entityTypes.listener.attributes.metrics.create: true
entityTypes.listener.attributes.websockets.type: boolean
entityTypes.listener.attributes.websockets.default: true
entityTypes.listener.attributes.websockets.description: For an http enabled listener, determines whether websockets access is enabled (true by default).
entityTypes.listener.attributes.websockets.create: true
entityTypes.listener.attributes.http.type: boolean
entityTypes.listener.attributes.http.default: false
entityTypes.listener.attributes.http.description: Accept HTTP connections that can upgrade to AMQP over WebSocket. Plain AMQP connections are not accepted on this listener.
entityTypes.listener.attributes.http.create: true
entityTypes.listener.attributes.httpRootDir.type: path
entityTypes.listener.attributes.httpRootDir.description: Absolute path to a directory from which to serve static HTML files (typically /usr/share/skupper-router/html).
entityTypes.listener.attributes.httpRootDir.create: true
entityTypes.listener.attributes.messageLoggingComponents.type: string
entityTypes.listener.attributes.messageLoggingComponents.default: none
entityTypes.listener.attributes.messageLoggingComponents.description: A comma separated list that indicates which components of the message should be logged. Defaults to 'none' (log nothing). If you want all properties and application properties of the message logged use 'all'. Specific components of the message can be logged by indicating the components via a comma separated list. The components are message-id, user-id, to, subject, reply-to, correlation-id, content-type, content-encoding, absolute-expiry-time, creation-time, group-id, group-sequence, reply-to-group-id, app-properties. The application-data part of the bare message will not be logged. No spaces are allowed
entityTypes.listener.attributes.messageLoggingComponents.create: true
entityTypes.listener.attributes.policyVhost.type: string
entityTypes.listener.attributes.policyVhost.required: false
entityTypes.listener.attributes.policyVhost.description: A listener may optionally define a virtual host to index to a specific policy to restrict the remote container to access only specific resources. This attribute defines the name of the policy vhost for this listener.  If multi-tenancy is enabled for the listener, this vhost will override the peer-supplied vhost for the purposes of identifying the desired policy settings for the connections.
entityTypes.listener.attributes.policyVhost.create: true
entityTypes.listener.attributes.openProperties.description: 'A JSON map containing connection properties.  These will be sent to the peer on connection open.  All map keys are restricted to strings containing only valid ASCII characters, Keys must not start with prefixes ''qd.'' or ''x-opt-qd.''.  The following key values are also reserved: ''product'', ''version'', ''failover-server-list'', ''network-host'', ''port'', ''scheme'' ''hostname'''
entityTypes.listener.attributes.openProperties.type: properties
entityTypes.listener.attributes.openProperties.required: false
entityTypes.listener.attributes.openProperties.create: true
entityTypes.connector.description: Establishes an outgoing connection from the router.
entityTypes.connector.extends: configurationEntity
entityTypes.connector.operations.0: CREATE
entityTypes.connector.operations.1: DELETE
entityTypes.connector.attributes.host.description: 'IP address: ipv4 or ipv6 literal or a host name'
entityTypes.connector.attributes.host.type: string
entityTypes.connector.attributes.host.default: 127.0.0.1
entityTypes.connector.attributes.host.create: true
entityTypes.connector.attributes.port.description: Port number or symbolic service name.
entityTypes.connector.attributes.port.type: string
entityTypes.connector.attributes.port.default: amqp
entityTypes.connector.attributes.port.create: true
entityTypes.connector.attributes.socketAddressFamily.type.0: IPv4
entityTypes.connector.attributes.socketAddressFamily.type.1: IPv6
entityTypes.connector.attributes.socketAddressFamily.required: false
entityTypes.connector.attributes.socketAddressFamily.description: "['IPv4', 'IPv6'] IPv4: Internet Protocol version 4; IPv6: Internet Protocol version 6.  If not specified, the protocol family will be automatically determined from the address."
entityTypes.connector.attributes.socketAddressFamily.create: true
entityTypes.connector.attributes.role.type.0: normal
entityTypes.connector.attributes.role.type.1: inter-router
entityTypes.connector.attributes.role.type.2: route-container
entityTypes.connector.attributes.role.type.3: edge
entityTypes.connector.attributes.role.default: normal
entityTypes.connector.attributes.role.description: The role of an established connection. In the normal role, the connection is assumed to be used for AMQP clients that are doing normal message delivery over the connection.  In the inter-router role, the connection is assumed to be to another router in the network.  Inter-router discovery and routing protocols can only be used over inter-router connections. route-container role can be used for router-container connections, for example, a router-broker connection.  In the edge role, the connection is assumed to be between and edge router and an interior router.
entityTypes.connector.attributes.role.create: true
entityTypes.connector.attributes.cost.type: integer
entityTypes.connector.attributes.cost.default: 1
entityTypes.connector.attributes.cost.required: false
entityTypes.connector.attributes.cost.create: true
entityTypes.connector.attributes.cost.description: For the 'inter-router' role only.  This value assigns a cost metric to the inter-router connection.  The default (and minimum) value is one.  Higher values represent higher costs.  The cost is used to influence the routing algorithm as it attempts to use the path with the lowest total cost from ingress to egress.
entityTypes.connector.attributes.sslProfile.type: string
entityTypes.connector.attributes.sslProfile.required: false
entityTypes.connector.attributes.sslProfile.description: Name of the sslProfile.
entityTypes.connector.attributes.sslProfile.create: true
entityTypes.connector.attributes.saslMechanisms.type: string
entityTypes.connector.attributes.saslMechanisms.required: false
entityTypes.connector.attributes.saslMechanisms.description: Space separated list of accepted SASL authentication mechanisms.
entityTypes.connector.attributes.saslMechanisms.create: true
entityTypes.connector.attributes.allowRedirect.type: boolean
entityTypes.connector.attributes.allowRedirect.default: true
entityTypes.connector.attributes.allowRedirect.description: Allow the peer to redirect this connection to another address.
entityTypes.connector.attributes.allowRedirect.create: true
entityTypes.connector.attributes.maxFrameSize.type: integer
entityTypes.connector.attributes.maxFrameSize.default: 16384
entityTypes.connector.attributes.maxFrameSize.description: The maximum frame size in octets that will be used in the connection-open negotiation with a connected peer.  The frame size is the largest contiguous set of uninterrupted data that can be sent for a message delivery over the connection. Interleaving of messages on different links is done at frame granularity. Policy settings will not overwrite this value. Defaults to 16384.
entityTypes.connector.attributes.maxFrameSize.create: true
entityTypes.connector.attributes.maxSessions.type: integer
entityTypes.connector.attributes.maxSessions.default: 32768
entityTypes.connector.attributes.maxSessions.description: The maximum number of sessions that can be simultaneously active on the connection. Setting this value to zero selects the default number of sessions. Policy settings will not overwrite this value. Defaults to 32768.
entityTypes.connector.attributes.maxSessions.create: true
entityTypes.connector.attributes.maxSessionFrames.type: integer
entityTypes.connector.attributes.maxSessionFrames.description: Session incoming window measured in transfer frames for sessions created on this connection. This is the number of transfer frames that may simultaneously be in flight for all links in the session. Setting this value to zero selects the default session window size. Policy settings will not overwrite this value. The numerical product of maxFrameSize and maxSessionFrames may not exceed 2^31-1. If (maxFrameSize x maxSessionFrames) exceeds 2^31-1 then maxSessionFrames is reduced to (2^31-1 / maxFrameSize). maxSessionFrames has a minimum value of 1.  Defaults to 0 (unlimited window).
entityTypes.connector.attributes.maxSessionFrames.required: false
entityTypes.connector.attributes.maxSessionFrames.create: true
entityTypes.connector.attributes.idleTimeoutSeconds.type: integer
entityTypes.connector.attributes.idleTimeoutSeconds.default: 16
entityTypes.connector.attributes.idleTimeoutSeconds.description: The idle timeout, in seconds, for connections through this connector.  If no frames are received on the connection for this time interval, the connection shall be closed.
entityTypes.connector.attributes.idleTimeoutSeconds.create: true
entityTypes.connector.attributes.stripAnnotations.type.0: in
entityTypes.connector.attributes.stripAnnotations.type.1: out
entityTypes.connector.attributes.stripAnnotations.type.2: both
entityTypes.connector.attributes.stripAnnotations.type.3: 'no'
entityTypes.connector.attributes.stripAnnotations.default: both
entityTypes.connector.attributes.stripAnnotations.description: "['in', 'out', 'both', 'no'] in: Strip the dispatch router specific annotations only on ingress; out: Strip the dispatch router specific annotations only on egress; both: Strip the dispatch router specific annotations on both ingress and egress; no - do not strip dispatch router specific annotations"
entityTypes.connector.attributes.stripAnnotations.create: true
entityTypes.connector.attributes.linkCapacity.type: integer
entityTypes.connector.attributes.linkCapacity.create: true
entityTypes.connector.attributes.linkCapacity.required: false
entityTypes.connector.attributes.linkCapacity.description: The capacity of links within this connection, in terms of message deliveries.  The capacity is the number of messages that can be in-flight concurrently for each link.
entityTypes.connector.attributes.verifyHostname.type: boolean
entityTypes.connector.attributes.verifyHostname.default: true
entityTypes.connector.attributes.verifyHostname.description: 'yes: Ensures that when initiating a connection (as a client) the host name in the URL to which this connector connects to matches the host name in the digital certificate that the peer sends back as part of the SSL connection; no: Does not perform host name verification'
entityTypes.connector.attributes.verifyHostname.create: true
entityTypes.connector.attributes.saslUsername.type: string
entityTypes.connector.attributes.saslUsername.required: false
entityTypes.connector.attributes.saslUsername.description: The user name that the connector is using to connect to a peer.
entityTypes.connector.attributes.saslUsername.create: true
entityTypes.connector.attributes.saslPassword.type: string
entityTypes.connector.attributes.saslPassword.required: false
entityTypes.connector.attributes.saslPassword.description: 'The password that the connector is using to connect to a peer. You can specify the password by specifying an environment variable that stores the password, a file that stores the password, or by entering the password in clear text. To use an environment variable, specify ''saslPassword: env:<var>''. Use this option with caution, because the environment of other processes is visible on certain platforms (for example, ps on certain Unix OSs). To use a file, specify ''saslPassword: file:<absolute-path-to-file>''. This option is the most secure, because permissions can be set on the file that contains the password. To specify the password in clear text, specify ''saslPassword: pass:<password>'' or ''saslPassword: <password>''. This option is insecure, so it should only be used if security is not a concern.'
entityTypes.connector.attributes.saslPassword.create: true
entityTypes.connector.attributes.saslPassword.hidden: true
entityTypes.connector.attributes.messageLoggingComponents.type: string
entityTypes.connector.attributes.messageLoggingComponents.default: none
entityTypes.connector.attributes.messageLoggingComponents.description: A comma separated list that indicates which components of the message should be logged (no spaces allowed between list components). Defaults to 'none' (log nothing). If you want all properties and application properties of the message logged use 'all'. Specific components of the message can be logged by indicating the components via a comma separated list. The components are message-id, user-id, to, subject, reply-to, correlation-id, content-type, content-encoding, absolute-expiry-time, creation-time, group-id, group-sequence, reply-to-group-id, app-properties. The application-data part of the bare message will not be logged. This log message is written to the MESSAGE logging module. In the 'log' entity, set 'module' property to MESSAGE or DEFAULT and 'enable' to trace+ to see this log message
entityTypes.connector.attributes.messageLoggingComponents.create: true
entityTypes.connector.attributes.failoverUrls.type: string
entityTypes.connector.attributes.failoverUrls.description: 'A read-only, comma-separated list of failover urls. '
entityTypes.connector.attributes.failoverUrls.create: false
entityTypes.connector.attributes.connectionStatus.type: string
entityTypes.connector.attributes.connectionStatus.description: A read-only status of the connection. Could be one of CONNECTING, SUCCESS, FAILED
entityTypes.connector.attributes.connectionStatus.create: false
entityTypes.connector.attributes.connectionMsg.type: string
entityTypes.connector.attributes.connectionMsg.description: A read-only connection message. Contains the connection message
entityTypes.connector.attributes.connectionMsg.create: false
entityTypes.connector.attributes.policyVhost.type: string
entityTypes.connector.attributes.policyVhost.required: false
entityTypes.connector.attributes.policyVhost.description: 'A connector may optionally define a policy to restrict the remote container to access only specific resources. This attribute defines the name of the policy vhost for this connector. Within the vhost the connector will use the vhost policy settings from user group ''$connector''. If the vhost policy is absent or if the user group ''$connector'' within that policy is absent then the connector will fail to start.  In policy specified via connector attribute ''policyVhost'' the following vhostUserGroupSettings attributes are unused:  ''users'', ''remoteHosts'', ''maxFrameSize'', ''maxSessionWindow'', ''maxSessions''.'
entityTypes.connector.attributes.policyVhost.create: true
entityTypes.connector.attributes.openProperties.description: 'A JSON map containing connection properties.  These will be sent to the peer on connection open.  All map keys are restricted to strings containing only valid ASCII characters, Keys must not start with prefixes ''qd.'' or ''x-opt-qd.''.  The following key values are also reserved: ''product'', ''version'', ''failover-server-list'', ''network-host'', ''port'', ''scheme'' ''hostname'''
entityTypes.connector.attributes.openProperties.type: properties
entityTypes.connector.attributes.openProperties.required: false
entityTypes.connector.attributes.openProperties.create: true
entityTypes.httpListener.description: Ingress HTTP bridge.
entityTypes.httpListener.extends: configurationEntity
entityTypes.httpListener.operations.0: CREATE
entityTypes.httpListener.operations.1: DELETE
entityTypes.httpListener.attributes.host.description: A host name, IPV4 or IPV6 literal, or the empty string. The empty string listens on all local addresses. A host name listens on all addresses associated with the name. An IPV6 literal address (or wildcard '[::]') listens only for IPV6. An IPV4 literal address (or wildcard '0.0.0.0') listens only for IPV4.
entityTypes.httpListener.attributes.host.type: string
entityTypes.httpListener.attributes.host.default: 0.0.0.0
entityTypes.httpListener.attributes.host.create: true
entityTypes.httpListener.attributes.address.description: Address of this http bridge
entityTypes.httpListener.attributes.address.type: string
entityTypes.httpListener.attributes.address.create: true
entityTypes.httpListener.attributes.port.description: Port number or symbolic service name.  If '0', the router shall assign an ephemeral port to the listener and log the port number with a log of the form 'SERVER (notice) Listening on <host>:<assigned-port> (<listener-name>)'
entityTypes.httpListener.attributes.port.type: string
entityTypes.httpListener.attributes.port.create: true
entityTypes.httpListener.attributes.siteId.type: string
entityTypes.httpListener.attributes.siteId.required: false
entityTypes.httpListener.attributes.siteId.description: Used to identify where request is handled.
entityTypes.httpListener.attributes.siteId.create: true
entityTypes.httpListener.attributes.sslProfile.type: string
entityTypes.httpListener.attributes.sslProfile.required: false
entityTypes.httpListener.attributes.sslProfile.description: Name of the sslProfile.
entityTypes.httpListener.attributes.sslProfile.create: true
entityTypes.httpListener.attributes.authenticatePeer.type: boolean
entityTypes.httpListener.attributes.authenticatePeer.default: false
entityTypes.httpListener.attributes.authenticatePeer.description: 'yes: Require the peer''s identity to be authenticated; no: Do not require any authentication.'
entityTypes.httpListener.attributes.authenticatePeer.create: true
entityTypes.httpListener.attributes.protocolVersion.description: The version of the HTTP protocol supported by this listener.
entityTypes.httpListener.attributes.protocolVersion.type.0: HTTP1
entityTypes.httpListener.attributes.protocolVersion.type.1: HTTP2
entityTypes.httpListener.attributes.protocolVersion.default: HTTP1
entityTypes.httpListener.attributes.protocolVersion.required: false
entityTypes.httpListener.attributes.protocolVersion.create: true
entityTypes.httpListener.attributes.aggregation.type.0: multipart
entityTypes.httpListener.attributes.aggregation.type.1: json
entityTypes.httpListener.attributes.aggregation.required: false
entityTypes.httpListener.attributes.aggregation.description: Aggregation mode for responses when used in conjunction with multicast address.
entityTypes.httpListener.attributes.aggregation.create: true
entityTypes.httpListener.attributes.eventChannel.type: boolean
entityTypes.httpListener.attributes.eventChannel.required: false
entityTypes.httpListener.attributes.eventChannel.description: Enables restricted event mode where no responses are sent to request and only post is allowed
entityTypes.httpListener.attributes.eventChannel.create: true
entityTypes.httpConnector.description: Egress HTTP bridge.
entityTypes.httpConnector.extends: configurationEntity
entityTypes.httpConnector.operations.0: CREATE
entityTypes.httpConnector.operations.1: DELETE
entityTypes.httpConnector.attributes.address.description: Address of this bridge
entityTypes.httpConnector.attributes.address.type: string
entityTypes.httpConnector.attributes.address.create: true
entityTypes.httpConnector.attributes.host.description: 'IP address: ipv4 or ipv6 literal or a host name'
entityTypes.httpConnector.attributes.host.type: string
entityTypes.httpConnector.attributes.host.default: 127.0.0.1
entityTypes.httpConnector.attributes.host.create: true
entityTypes.httpConnector.attributes.siteId.type: string
entityTypes.httpConnector.attributes.siteId.required: false
entityTypes.httpConnector.attributes.siteId.description: Used to identify where request originates.
entityTypes.httpConnector.attributes.siteId.create: true
entityTypes.httpConnector.attributes.port.description: Port number or symbolic service name.
entityTypes.httpConnector.attributes.port.type: string
entityTypes.httpConnector.attributes.port.create: true
entityTypes.httpConnector.attributes.sslProfile.type: string
entityTypes.httpConnector.attributes.sslProfile.required: false
entityTypes.httpConnector.attributes.sslProfile.description: Name of the sslProfile.
entityTypes.httpConnector.attributes.sslProfile.create: true
entityTypes.httpConnector.attributes.protocolVersion.description: The version of the HTTP protocol supported by this connector.
entityTypes.httpConnector.attributes.protocolVersion.type.0: HTTP1
entityTypes.httpConnector.attributes.protocolVersion.type.1: HTTP2
entityTypes.httpConnector.attributes.protocolVersion.default: HTTP1
entityTypes.httpConnector.attributes.protocolVersion.required: false
entityTypes.httpConnector.attributes.protocolVersion.create: true
entityTypes.httpConnector.attributes.aggregation.type.0: multipart
entityTypes.httpConnector.attributes.aggregation.type.1: json
entityTypes.httpConnector.attributes.aggregation.required: false
entityTypes.httpConnector.attributes.aggregation.description: Aggregation mode for responses when used in conjunction with multicast address.
entityTypes.httpConnector.attributes.aggregation.create: true
entityTypes.httpConnector.attributes.eventChannel.type: boolean
entityTypes.httpConnector.attributes.eventChannel.required: false
entityTypes.httpConnector.attributes.eventChannel.description: Enables restricted event mode where no responses are sent to request and only post is allowed
entityTypes.httpConnector.attributes.eventChannel.create: true
entityTypes.httpConnector.attributes.verifyHostname.type: boolean
entityTypes.httpConnector.attributes.verifyHostname.default: true
entityTypes.httpConnector.attributes.verifyHostname.description: 'yes: Ensures that when initiating a connection (as a client) the host name in the URL to which this connector connects to matches the host name in the digital certificate that the peer sends back as part of the TLS connection; no: Does not perform host name verification'
entityTypes.httpConnector.attributes.verifyHostname.deprecationName: verifyHostName
entityTypes.httpConnector.attributes.verifyHostname.create: true
entityTypes.httpConnector.attributes.hostOverride.type: string
entityTypes.httpConnector.attributes.hostOverride.required: false
entityTypes.httpConnector.attributes.hostOverride.description: Used to override the value of the Host header sent to the client.
entityTypes.httpConnector.attributes.hostOverride.create: true
entityTypes.httpRequestInfo.description: Statistics for requests to/from httpListener and httpConnector instances
entityTypes.httpRequestInfo.extends: operationalEntity
entityTypes.httpRequestInfo.attributes.address.description: the router address over which the request was forwarded.
entityTypes.httpRequestInfo.attributes.address.type: string
entityTypes.httpRequestInfo.attributes.host.description: IP address and port number of peer (i.e. the client for direction=in and the server for direction=out) in the form addr:port.
entityTypes.httpRequestInfo.attributes.host.type: string
entityTypes.httpRequestInfo.attributes.site.description: The site identifier of the router in which the request originated (for direction=out) or was handled (for direction=in).
entityTypes.httpRequestInfo.attributes.site.type: string
entityTypes.httpRequestInfo.attributes.direction.description: Direction of connection establishment in or out of the router.
entityTypes.httpRequestInfo.attributes.direction.type.0: in
entityTypes.httpRequestInfo.attributes.direction.type.1: out
entityTypes.httpRequestInfo.attributes.requests.type: integer
entityTypes.httpRequestInfo.attributes.requests.graph: true
entityTypes.httpRequestInfo.attributes.requests.description: The cumulative number of requests made.
entityTypes.httpRequestInfo.attributes.bytesIn.type: integer
entityTypes.httpRequestInfo.attributes.bytesIn.graph: true
entityTypes.httpRequestInfo.attributes.bytesIn.description: The cumulative number of bytes sent in requests.
entityTypes.httpRequestInfo.attributes.bytesOut.type: integer
entityTypes.httpRequestInfo.attributes.bytesOut.graph: true
entityTypes.httpRequestInfo.attributes.bytesOut.description: The cumulative number of bytes sent in responses.
entityTypes.httpRequestInfo.attributes.maxLatency.type: integer
entityTypes.httpRequestInfo.attributes.maxLatency.graph: true
entityTypes.httpRequestInfo.attributes.maxLatency.description: The maximum latency seen for any request represented by this instance.
entityTypes.httpRequestInfo.attributes.details.description: Details of method and statuses for requests.
entityTypes.httpRequestInfo.attributes.details.type: map
entityTypes.tcpListener.description: Ingress TCP bridge.
entityTypes.tcpListener.extends: configurationEntity
entityTypes.tcpListener.operations.0: CREATE
entityTypes.tcpListener.operations.1: DELETE
entityTypes.tcpListener.attributes.address.description: Address of this bridge
entityTypes.tcpListener.attributes.address.type: string
entityTypes.tcpListener.attributes.address.create: true
entityTypes.tcpListener.attributes.host.description: A host name, IPV4 or IPV6 literal, or the empty string. The empty string listens on all local addresses. A host name listens on all addresses associated with the name. An IPV6 literal address (or wildcard '[::]') listens only for IPV6. An IPV4 literal address (or wildcard '0.0.0.0') listens only for IPV4.
entityTypes.tcpListener.attributes.host.type: string
entityTypes.tcpListener.attributes.host.default: 0.0.0.0
entityTypes.tcpListener.attributes.host.create: true
entityTypes.tcpListener.attributes.port.description: Port number or symbolic service name.  If '0', the router shall assign an ephemeral port to the listener and log the port number with a log of the form 'SERVER (notice) Listening on <host>:<assigned-port> (<listener-name>)'
entityTypes.tcpListener.attributes.port.type: string
entityTypes.tcpListener.attributes.port.create: true
entityTypes.tcpListener.attributes.siteId.type: string
entityTypes.tcpListener.attributes.siteId.required: false
entityTypes.tcpListener.attributes.siteId.description: Used to identify where connection is handled.
entityTypes.tcpListener.attributes.siteId.create: true
entityTypes.tcpListener.attributes.connectionsOpened.type: integer
entityTypes.tcpListener.attributes.connectionsOpened.graph: true
entityTypes.tcpListener.attributes.connectionsOpened.description: The number of connections opened by this listener.
entityTypes.tcpListener.attributes.connectionsClosed.type: integer
entityTypes.tcpListener.attributes.connectionsClosed.graph: true
entityTypes.tcpListener.attributes.connectionsClosed.description: The number of connections closed by this listener.
entityTypes.tcpListener.attributes.bytesIn.type: integer
entityTypes.tcpListener.attributes.bytesIn.graph: true
entityTypes.tcpListener.attributes.bytesIn.description: The number of bytes sent from clients to servers on all connections to this listener.
entityTypes.tcpListener.attributes.bytesOut.type: integer
entityTypes.tcpListener.attributes.bytesOut.graph: true
entityTypes.tcpListener.attributes.bytesOut.description: The number of bytes sent from servers to clients on all connections to this listener.
entityTypes.tcpListener.attributes.operStatus.type.0: up
entityTypes.tcpListener.attributes.operStatus.type.1: down
entityTypes.tcpListener.attributes.operStatus.description: 'The operational status of TCP socket listener: up - the service is active and incoming connections are permitted; down - the service is not active and incoming connection attempts will be refused.'
entityTypes.tcpListener.attributes.operStatus.create: false
entityTypes.tcpConnector.description: Egress TCP bridge.
entityTypes.tcpConnector.extends: configurationEntity
entityTypes.tcpConnector.operations.0: CREATE
entityTypes.tcpConnector.operations.1: DELETE
entityTypes.tcpConnector.attributes.address.description: Address of this bridge
entityTypes.tcpConnector.attributes.address.type: string
entityTypes.tcpConnector.attributes.address.create: true
entityTypes.tcpConnector.attributes.host.description: 'IP address: ipv4 or ipv6 literal or a host name'
entityTypes.tcpConnector.attributes.host.type: string
entityTypes.tcpConnector.attributes.host.create: true
entityTypes.tcpConnector.attributes.port.description: Port number or symbolic service name.
entityTypes.tcpConnector.attributes.port.type: string
entityTypes.tcpConnector.attributes.port.create: true
entityTypes.tcpConnector.attributes.siteId.type: string
entityTypes.tcpConnector.attributes.siteId.required: false
entityTypes.tcpConnector.attributes.siteId.description: Used to identify origin of connections.
entityTypes.tcpConnector.attributes.siteId.create: true
entityTypes.tcpConnector.attributes.connectionsOpened.type: integer
entityTypes.tcpConnector.attributes.connectionsOpened.graph: true
entityTypes.tcpConnector.attributes.connectionsOpened.description: The number of connections opened by this connector.
entityTypes.tcpConnector.attributes.connectionsClosed.type: integer
entityTypes.tcpConnector.attributes.connectionsClosed.graph: true
entityTypes.tcpConnector.attributes.connectionsClosed.description: The number of connections closed by this connector.
entityTypes.tcpConnector.attributes.bytesIn.type: integer
entityTypes.tcpConnector.attributes.bytesIn.graph: true
entityTypes.tcpConnector.attributes.bytesIn.description: The number of bytes sent from servers to clients on all connections created by this connector.
entityTypes.tcpConnector.attributes.bytesOut.type: integer
entityTypes.tcpConnector.attributes.bytesOut.graph: true
entityTypes.tcpConnector.attributes.bytesOut.description: The number of bytes sent from clients to servers on all connections created by this connector.
entityTypes.log.description: Configure logging for a particular module. You can use the `UPDATE` operation to change log settings while the router is running.
entityTypes.log.extends: configurationEntity
entityTypes.log.operations.0: UPDATE
entityTypes.log.attributes.module.type.0: ROUTER
entityTypes.log.attributes.module.type.1: ROUTER_CORE
entityTypes.log.attributes.module.type.2: ROUTER_HELLO
entityTypes.log.attributes.module.type.3: ROUTER_LS
entityTypes.log.attributes.module.type.4: ROUTER_MA
entityTypes.log.attributes.module.type.5: MESSAGE
entityTypes.log.attributes.module.type.6: SERVER
entityTypes.log.attributes.module.type.7: AGENT
entityTypes.log.attributes.module.type.8: CONTAINER
entityTypes.log.attributes.module.type.9: ERROR
entityTypes.log.attributes.module.type.10: POLICY
entityTypes.log.attributes.module.type.11: HTTP
entityTypes.log.attributes.module.type.12: CONN_MGR
entityTypes.log.attributes.module.type.13: PYTHON
entityTypes.log.attributes.module.type.14: PROTOCOL
entityTypes.log.attributes.module.type.15: TCP_ADAPTOR
entityTypes.log.attributes.module.type.16: HTTP_ADAPTOR
entityTypes.log.attributes.module.type.17: FLOW_LOG
entityTypes.log.attributes.module.type.18: DEFAULT
entityTypes.log.attributes.module.required: true
entityTypes.log.attributes.module.description: Module to configure. The special module 'DEFAULT' specifies defaults for all modules.
entityTypes.log.attributes.enable.type: string
entityTypes.log.attributes.enable.description: 'Levels are: trace, debug, info, notice, warning, error, critical. The enable string is a comma-separated list of levels. A level may have a trailing ''\+'' to enable that level and above. For example ''trace,debug,warning+'' means enable trace, debug, warning, error and critical. The value ''none'' means disable logging for the module.'
entityTypes.log.attributes.enable.update: true
entityTypes.log.attributes.includeTimestamp.type: boolean
entityTypes.log.attributes.includeTimestamp.description: Include timestamp in log messages.
entityTypes.log.attributes.includeTimestamp.update: true
entityTypes.log.attributes.includeSource.type: boolean
entityTypes.log.attributes.includeSource.description: Include source file and line number in log messages.
entityTypes.log.attributes.includeSource.update: true
entityTypes.log.attributes.outputFile.type: string
entityTypes.log.attributes.outputFile.description: Where to send log messages. Can be 'stderr', 'stdout', 'syslog' or a file name.
entityTypes.log.attributes.outputFile.update: true
entityTypes.logStats.description: histogram of the different severity-levels of events on the given log.
entityTypes.logStats.extends: operationalEntity
entityTypes.logStats.attributes.traceCount.description: How many trace-level events have happened on this log.
entityTypes.logStats.attributes.traceCount.graph: true
entityTypes.logStats.attributes.traceCount.type: integer
entityTypes.logStats.attributes.debugCount.description: How many debug-level events have happened on this log.
entityTypes.logStats.attributes.debugCount.graph: true
entityTypes.logStats.attributes.debugCount.type: integer
entityTypes.logStats.attributes.infoCount.description: How many info-level events have happened on this log.
entityTypes.logStats.attributes.infoCount.graph: true
entityTypes.logStats.attributes.infoCount.type: integer
entityTypes.logStats.attributes.noticeCount.description: How many notice-level events have happened on this log.
entityTypes.logStats.attributes.noticeCount.graph: true
entityTypes.logStats.attributes.noticeCount.type: integer
entityTypes.logStats.attributes.warningCount.description: How many warning-level events have happened on this log.
entityTypes.logStats.attributes.warningCount.graph: true
entityTypes.logStats.attributes.warningCount.type: integer
entityTypes.logStats.attributes.errorCount.description: How many error-level events have happened on this log.
entityTypes.logStats.attributes.errorCount.graph: true
entityTypes.logStats.attributes.errorCount.type: integer
entityTypes.logStats.attributes.criticalCount.description: How many critical-level events have happened on this log.
entityTypes.logStats.attributes.criticalCount.graph: true
entityTypes.logStats.attributes.criticalCount.type: integer
entityTypes.router.config.address.description: Entity type for address configuration.  This is used to configure the treatment of message-routed deliveries within a particular address-space.  The configuration controls distribution and address phasing.
entityTypes.router.config.address.extends: configurationEntity
entityTypes.router.config.address.operations.0: CREATE
entityTypes.router.config.address.operations.1: DELETE
entityTypes.router.config.address.attributes.prefix.type: string
entityTypes.router.config.address.attributes.prefix.description: The address prefix for the configured settings. Cannot be used with a pattern attribute.
entityTypes.router.config.address.attributes.prefix.create: true
entityTypes.router.config.address.attributes.prefix.required: false
entityTypes.router.config.address.attributes.pattern.type: string
entityTypes.router.config.address.attributes.pattern.description: 'A wildcarded pattern for address matching. Incoming addresses are matched against this pattern. Matching addresses use the configured settings. The pattern consists of one or more tokens separated by a forward slash ''/''. A token can be one of the following: a * character, a # character, or a sequence of characters that do not include /, *, or #.  The * token matches any single token.  The # token matches zero or more tokens. * has higher precedence than #, and exact match has the highest precedence. Cannot be used with a prefix attribute.'
entityTypes.router.config.address.attributes.pattern.create: true
entityTypes.router.config.address.attributes.pattern.required: false
entityTypes.router.config.address.attributes.distribution.type.0: multicast
entityTypes.router.config.address.attributes.distribution.type.1: closest
entityTypes.router.config.address.attributes.distribution.type.2: balanced
entityTypes.router.config.address.attributes.distribution.type.3: unavailable
entityTypes.router.config.address.attributes.distribution.description: Treatment of traffic associated with the address
entityTypes.router.config.address.attributes.distribution.create: true
entityTypes.router.config.address.attributes.distribution.required: false
entityTypes.router.config.address.attributes.distribution.default: balanced
entityTypes.router.config.address.attributes.priority.type: integer
entityTypes.router.config.address.attributes.priority.description: All messages sent to this address which lack an intrinsic priority will be assigned this priority.
entityTypes.router.config.address.attributes.priority.create: true
entityTypes.router.config.address.attributes.priority.required: false
entityTypes.router.config.autoLink.description: Entity type for configuring auto-links.  Auto-links are links whose lifecycle is managed by the router.
entityTypes.router.config.autoLink.extends: configurationEntity
entityTypes.router.config.autoLink.operations.0: CREATE
entityTypes.router.config.autoLink.operations.1: DELETE
entityTypes.router.config.autoLink.attributes.address.type: string
entityTypes.router.config.autoLink.attributes.address.description: The address of the provisioned object
entityTypes.router.config.autoLink.attributes.address.create: true
entityTypes.router.config.autoLink.attributes.address.required: true
entityTypes.router.config.autoLink.attributes.direction.type.0: in
entityTypes.router.config.autoLink.attributes.direction.type.1: out
entityTypes.router.config.autoLink.attributes.direction.description: The direction of the link to be created.  In means into the router, out means out of the router.
entityTypes.router.config.autoLink.attributes.direction.create: true
entityTypes.router.config.autoLink.attributes.direction.required: true
entityTypes.router.config.autoLink.attributes.containerId.type: string
entityTypes.router.config.autoLink.attributes.containerId.description: ContainerID for the target container. Only one of containerId or connection should be specified for an autoLink. Specifying both will result in the autoLink not being created
entityTypes.router.config.autoLink.attributes.containerId.create: true
entityTypes.router.config.autoLink.attributes.containerId.required: false
entityTypes.router.config.autoLink.attributes.connection.type: string
entityTypes.router.config.autoLink.attributes.connection.description: The name from a connector or listener. Only one of containerId or connection should be specified for an autoLink. Specifying both will result in the autoLink not being created
entityTypes.router.config.autoLink.attributes.connection.create: true
entityTypes.router.config.autoLink.attributes.connection.required: false
entityTypes.router.config.autoLink.attributes.externalAddress.type: string
entityTypes.router.config.autoLink.attributes.externalAddress.description: If present, an alternate address of the node on the remote container.  This is used if the node has a different address than the address used internally by the router to route deliveries.
entityTypes.router.config.autoLink.attributes.externalAddress.create: true
entityTypes.router.config.autoLink.attributes.externalAddress.required: false
entityTypes.router.config.autoLink.attributes.linkRef.type: string
entityTypes.router.config.autoLink.attributes.linkRef.description: Reference to the io.skupper.router.router.link if the link exists
entityTypes.router.config.autoLink.attributes.linkRef.create: false
entityTypes.router.config.autoLink.attributes.operStatus.type.0: inactive
entityTypes.router.config.autoLink.attributes.operStatus.type.1: attaching
entityTypes.router.config.autoLink.attributes.operStatus.type.2: failed
entityTypes.router.config.autoLink.attributes.operStatus.type.3: active
entityTypes.router.config.autoLink.attributes.operStatus.type.4: quiescing
entityTypes.router.config.autoLink.attributes.operStatus.type.5: idle
entityTypes.router.config.autoLink.attributes.operStatus.description: 'The operational status of this autoLink: inactive - The remote container is not connected; attaching - the link is attaching to the remote node; failed - the link attach failed; active - the link is attached and operational; quiescing - the link is transitioning to idle state; idle - the link is attached but there are no deliveries flowing and no unsettled deliveries.'
entityTypes.router.config.autoLink.attributes.operStatus.create: false
entityTypes.router.config.autoLink.attributes.lastError.type: string
entityTypes.router.config.autoLink.attributes.lastError.description: The error description from the last attach failure
entityTypes.router.config.autoLink.attributes.lastError.create: false
entityTypes.router.link.description: 'Link to another AMQP endpoint: router node, client or other AMQP process.'
entityTypes.router.link.extends: operationalEntity
entityTypes.router.link.operations.0: UPDATE
entityTypes.router.link.attributes.adminStatus.type.0: enabled
entityTypes.router.link.attributes.adminStatus.type.1: disabled
entityTypes.router.link.attributes.adminStatus.default: enabled
entityTypes.router.link.attributes.adminStatus.update: true
entityTypes.router.link.attributes.operStatus.type.0: up
entityTypes.router.link.attributes.operStatus.type.1: down
entityTypes.router.link.attributes.operStatus.type.2: quiescing
entityTypes.router.link.attributes.operStatus.type.3: idle
entityTypes.router.link.attributes.linkName.type: string
entityTypes.router.link.attributes.linkName.description: Name assigned to the link in the Attach.
entityTypes.router.link.attributes.linkType.type.0: endpoint
entityTypes.router.link.attributes.linkType.type.1: router-control
entityTypes.router.link.attributes.linkType.type.2: inter-router
entityTypes.router.link.attributes.linkType.description: 'Type of link: endpoint: a link to a normally connected endpoint; inter-router: a link to another router in the network.'
entityTypes.router.link.attributes.linkDir.type.0: in
entityTypes.router.link.attributes.linkDir.type.1: out
entityTypes.router.link.attributes.linkDir.description: Direction of delivery flow over the link, inbound or outbound to or from the router.
entityTypes.router.link.attributes.owningAddr.type: string
entityTypes.router.link.attributes.owningAddr.description: 'Address assigned to this link during attach: The target for inbound links or the source for outbound links.'
entityTypes.router.link.attributes.capacity.type: integer
entityTypes.router.link.attributes.capacity.description: The capacity, in deliveries, for the link.  The number of undelivered plus unsettled deliveries shall not exceed the capacity.  This is enforced by link flow control.
entityTypes.router.link.attributes.peer.type: string
entityTypes.router.link.attributes.peer.description: Identifier of the paired link if this is an attach-routed link.
entityTypes.router.link.attributes.undeliveredCount.type: integer
entityTypes.router.link.attributes.undeliveredCount.graph: true
entityTypes.router.link.attributes.undeliveredCount.description: The number of undelivered messages pending for the link.
entityTypes.router.link.attributes.unsettledCount.type: integer
entityTypes.router.link.attributes.unsettledCount.graph: true
entityTypes.router.link.attributes.unsettledCount.description: The number of unsettled deliveries awaiting settlement on the link
entityTypes.router.link.attributes.deliveryCount.type: integer
entityTypes.router.link.attributes.deliveryCount.graph: true
entityTypes.router.link.attributes.deliveryCount.description: The total number of deliveries that have traversed this link.
entityTypes.router.link.attributes.presettledCount.type: integer
entityTypes.router.link.attributes.presettledCount.graph: true
entityTypes.router.link.attributes.presettledCount.description: The total number of pre-settled deliveries.
entityTypes.router.link.attributes.droppedPresettledCount.type: integer
entityTypes.router.link.attributes.droppedPresettledCount.graph: true
entityTypes.router.link.attributes.droppedPresettledCount.description: The total number of pre-settled deliveries that were dropped.
entityTypes.router.link.attributes.acceptedCount.type: integer
entityTypes.router.link.attributes.acceptedCount.graph: true
entityTypes.router.link.attributes.acceptedCount.description: The total number of accepted deliveries.
entityTypes.router.link.attributes.rejectedCount.type: integer
entityTypes.router.link.attributes.rejectedCount.graph: true
entityTypes.router.link.attributes.rejectedCount.description: The total number of rejected deliveries.
entityTypes.router.link.attributes.releasedCount.type: integer
entityTypes.router.link.attributes.releasedCount.graph: true
entityTypes.router.link.attributes.releasedCount.description: The total number of released deliveries.
entityTypes.router.link.attributes.modifiedCount.type: integer
entityTypes.router.link.attributes.modifiedCount.graph: true
entityTypes.router.link.attributes.modifiedCount.description: The total number of modified deliveries.
entityTypes.router.link.attributes.deliveriesDelayed1Sec.type: integer
entityTypes.router.link.attributes.deliveriesDelayed1Sec.graph: true
entityTypes.router.link.attributes.deliveriesDelayed1Sec.description: The total number of settled deliveries that were held in the router for 1 to 10 seconds.
entityTypes.router.link.attributes.deliveriesDelayed10Sec.type: integer
entityTypes.router.link.attributes.deliveriesDelayed10Sec.graph: true
entityTypes.router.link.attributes.deliveriesDelayed10Sec.description: The total number of settled deliveries that were held in the router for more than 10 seconds.
entityTypes.router.link.attributes.deliveriesStuck.type: integer
entityTypes.router.link.attributes.deliveriesStuck.graph: true
entityTypes.router.link.attributes.deliveriesStuck.description: The current number of deliveries that are unsettled and have been held in the router for more than 10 seconds.
entityTypes.router.link.attributes.creditAvailable.type: integer
entityTypes.router.link.attributes.creditAvailable.graph: true
entityTypes.router.link.attributes.creditAvailable.description: The number of credits available on this link.
entityTypes.router.link.attributes.zeroCreditSeconds.type: integer
entityTypes.router.link.attributes.zeroCreditSeconds.description: The number of seconds that the link's available credit has remained zero.
entityTypes.router.link.attributes.settleRate.type: integer
entityTypes.router.link.attributes.settleRate.graph: true
entityTypes.router.link.attributes.settleRate.description: The average rate (over five seconds) of settlement in deliveries-per-second.  This is included for egress links only.
entityTypes.router.link.attributes.ingressHistogram.type: list
entityTypes.router.link.attributes.ingressHistogram.description: For outgoing links on connections with 'normal' role.  This histogram shows the number of settled deliveries on the link that ingressed the network at each interior router node.
entityTypes.router.link.attributes.priority.type: integer
entityTypes.router.link.attributes.priority.description: For inter-router links, this is the message priority being handled.
entityTypes.router.address.description: AMQP address managed by the router.
entityTypes.router.address.extends: operationalEntity
entityTypes.router.address.attributes.distribution.type.0: flood
entityTypes.router.address.attributes.distribution.type.1: multicast
entityTypes.router.address.attributes.distribution.type.2: closest
entityTypes.router.address.attributes.distribution.type.3: balanced
entityTypes.router.address.attributes.distribution.type.4: linkBalanced
entityTypes.router.address.attributes.distribution.type.5: unavailable
entityTypes.router.address.attributes.distribution.description: 'Forwarding treatment for the address: flood - messages delivered to all subscribers along all available paths (this will cause duplicate deliveries if there are redundant paths); multicast - one copy of each message delivered to all subscribers; closest - messages delivered to only the closest subscriber; balanced - messages delivered to one subscriber with load balanced across subscribers; linkBalanced - for link-routing, link attaches balanced across destinations; unavailable - this address is unavailable, link attaches to an address of unavailable distribution will be rejected.'
entityTypes.router.address.attributes.inProcess.type: integer
entityTypes.router.address.attributes.inProcess.description: The number of in-process subscribers for this address
entityTypes.router.address.attributes.subscriberCount.type: integer
entityTypes.router.address.attributes.subscriberCount.description: The number of local subscribers for this address (i.e. attached to this router)
entityTypes.router.address.attributes.subscriberCount.graph: true
entityTypes.router.address.attributes.remoteCount.type: integer
entityTypes.router.address.attributes.remoteCount.description: The number of remote routers that have at least one subscriber to this address
entityTypes.router.address.attributes.remoteCount.graph: true
entityTypes.router.address.attributes.containerCount.type: integer
entityTypes.router.address.attributes.containerCount.description: The number of attached containers that serve this route address
entityTypes.router.address.attributes.containerCount.graph: true
entityTypes.router.address.attributes.deliveriesIngress.type: integer
entityTypes.router.address.attributes.deliveriesIngress.description: The number of deliveries to this address that entered the router network on this router
entityTypes.router.address.attributes.deliveriesIngress.graph: true
entityTypes.router.address.attributes.deliveriesEgress.type: integer
entityTypes.router.address.attributes.deliveriesEgress.description: The number of deliveries to this address that exited the router network on this router
entityTypes.router.address.attributes.deliveriesEgress.graph: true
entityTypes.router.address.attributes.deliveriesTransit.type: integer
entityTypes.router.address.attributes.deliveriesTransit.description: The number of deliveries to this address that transited this router to another router
entityTypes.router.address.attributes.deliveriesTransit.graph: true
entityTypes.router.address.attributes.deliveriesToContainer.type: integer
entityTypes.router.address.attributes.deliveriesToContainer.description: The number of deliveries to this address that were given to an in-process subscriber
entityTypes.router.address.attributes.deliveriesToContainer.graph: true
entityTypes.router.address.attributes.deliveriesFromContainer.type: integer
entityTypes.router.address.attributes.deliveriesFromContainer.description: The number of deliveries to this address that were originated from an in-process entity
entityTypes.router.address.attributes.deliveriesFromContainer.graph: true
entityTypes.router.address.attributes.deliveriesIngressRouteContainer.type: integer
entityTypes.router.address.attributes.deliveriesIngressRouteContainer.description: Number of deliveries that were received from a route-container address.
entityTypes.router.address.attributes.deliveriesIngressRouteContainer.graph: true
entityTypes.router.address.attributes.deliveriesEgressRouteContainer.type: integer
entityTypes.router.address.attributes.deliveriesEgressRouteContainer.description: Number of deliveries that were sent to a route-container address.
entityTypes.router.address.attributes.deliveriesEgressRouteContainer.graph: true
entityTypes.router.address.attributes.key.description: Internal unique (to this router) key to identify the address
entityTypes.router.address.attributes.key.type: string
entityTypes.router.address.attributes.remoteHostRouters.type: list
entityTypes.router.address.attributes.remoteHostRouters.description: List of remote routers on which there is a destination for this address.
entityTypes.router.address.attributes.transitOutstanding.type: list
entityTypes.router.address.attributes.transitOutstanding.description: List of numbers of outstanding deliveries across a transit (inter-router) connection for this address.  This is for balanced distribution only.
entityTypes.router.address.attributes.trackedDeliveries.type: integer
entityTypes.router.address.attributes.trackedDeliveries.description: Number of transit deliveries being tracked for this address (for balanced distribution).
entityTypes.router.address.attributes.priority.type: integer
entityTypes.router.address.attributes.priority.description: The message priority being handled by this address.
entityTypes.router.address.attributes.watch.type: boolean
entityTypes.router.address.attributes.watch.description: True iff there is an address-watch monitoring this address.
entityTypes.router.node.description: Remote router node connected to this router.
entityTypes.router.node.extends: operationalEntity
entityTypes.router.node.attributes.id.description: Remote node identifier.
entityTypes.router.node.attributes.id.type: string
entityTypes.router.node.attributes.protocolVersion.description: Router-protocol version supported by the node.
entityTypes.router.node.attributes.protocolVersion.type: integer
entityTypes.router.node.attributes.instance.description: Remote node boot number.
entityTypes.router.node.attributes.instance.type: integer
entityTypes.router.node.attributes.linkState.description: List of remote node's neighbours.
entityTypes.router.node.attributes.linkState.type: list
entityTypes.router.node.attributes.nextHop.description: Neighbour ID of next hop to remote node from here.
entityTypes.router.node.attributes.nextHop.type: string
entityTypes.router.node.attributes.validOrigins.description: List of valid origin nodes for messages arriving via the re mote node, used for duplicate elimination in redundant networks.
entityTypes.router.node.attributes.validOrigins.type: list
entityTypes.router.node.attributes.address.description: Address of the remote node
entityTypes.router.node.attributes.address.type: string
entityTypes.router.node.attributes.routerLink.description: Local link to remote node
entityTypes.router.node.attributes.routerLink.type: entityId
entityTypes.router.node.attributes.cost.description: Reachability cost
entityTypes.router.node.attributes.cost.type: integer
entityTypes.router.node.attributes.lastTopoChange.description: Timestamp showing the most recent change to this node's neighborhood.
entityTypes.router.node.attributes.lastTopoChange.type: integer
entityTypes.router.node.attributes.index.description: Index number used in statistics histograms for this router node.  This index is specific to this router.
entityTypes.router.node.attributes.index.type: integer
entityTypes.connection.description: Connections to the router's container.
entityTypes.connection.extends: operationalEntity
entityTypes.connection.attributes.adminStatus.type.0: enabled
entityTypes.connection.attributes.adminStatus.type.1: deleted
entityTypes.connection.attributes.adminStatus.default: enabled
entityTypes.connection.attributes.adminStatus.description: This field is set to enabled when the connection is up and running. Setting this field to deleted will terminate the connection and all links and sessions contained in the connection. Inter-router connections cannot be terminated by setting the adminStatus to deleted.
entityTypes.connection.attributes.adminStatus.update: true
entityTypes.connection.attributes.operStatus.type.0: up
entityTypes.connection.attributes.operStatus.type.1: closing
entityTypes.connection.attributes.protocol.type: string
entityTypes.connection.attributes.protocol.description: The protocol adaptor that is handling this connection
entityTypes.connection.attributes.container.description: The container for this connection
entityTypes.connection.attributes.container.type: string
entityTypes.connection.attributes.opened.type: boolean
entityTypes.connection.attributes.opened.description: The connection has been opened (i.e. AMQP OPEN)
entityTypes.connection.attributes.host.description: IP address and port number in the form addr:port.
entityTypes.connection.attributes.host.type: string
entityTypes.connection.attributes.dir.description: Direction of connection establishment in or out of the router.
entityTypes.connection.attributes.dir.type.0: in
entityTypes.connection.attributes.dir.type.1: out
entityTypes.connection.attributes.role.type: string
entityTypes.connection.attributes.isAuthenticated.description: Indicates whether the identity of the connection's user is authentic.
entityTypes.connection.attributes.isAuthenticated.type: boolean
entityTypes.connection.attributes.isEncrypted.description: Indicates whether the connection content is encrypted.
entityTypes.connection.attributes.isEncrypted.type: boolean
entityTypes.connection.attributes.enableProtocolTrace.description: Indicates whether protocol level amqp frame trace logging is turned on or off for this connection.
entityTypes.connection.attributes.enableProtocolTrace.type: boolean
entityTypes.connection.attributes.enableProtocolTrace.create: false
entityTypes.connection.attributes.enableProtocolTrace.update: true
entityTypes.connection.attributes.enableProtocolTrace.default: false
entityTypes.connection.attributes.sasl.description: SASL mechanism in effect for authentication.
entityTypes.connection.attributes.sasl.type: string
entityTypes.connection.attributes.user.description: Identity of the authenticated user.
entityTypes.connection.attributes.user.type: string
entityTypes.connection.attributes.ssl.description: True iff SSL/TLS is in effect for this connection.
entityTypes.connection.attributes.ssl.type: boolean
entityTypes.connection.attributes.sslProto.description: SSL protocol name
entityTypes.connection.attributes.sslProto.type: string
entityTypes.connection.attributes.sslCipher.description: SSL cipher name
entityTypes.connection.attributes.sslCipher.type: string
entityTypes.connection.attributes.sslSsf.description: SSL strength factor in effect
entityTypes.connection.attributes.sslSsf.type: integer
entityTypes.connection.attributes.uptimeSeconds.type: integer
entityTypes.connection.attributes.uptimeSeconds.graph: true
entityTypes.connection.attributes.uptimeSeconds.description: The number of seconds since the connection was created.
entityTypes.connection.attributes.properties.description: Connection properties supplied by the peer.
entityTypes.connection.attributes.properties.type: map
entityTypes.connection.attributes.lastDlvSeconds.type: integer
entityTypes.connection.attributes.lastDlvSeconds.graph: true
entityTypes.connection.attributes.lastDlvSeconds.description: The number of seconds since a delivery was sent on this connection. Will display a - (dash) if no deliveries have been sent on the connection.
entityTypes.tcpConnection.description: TCP Connections to/from the router's container.
entityTypes.tcpConnection.extends: operationalEntity
entityTypes.tcpConnection.attributes.address.description: the router address over which the tcp connection is forwarded.
entityTypes.tcpConnection.attributes.address.type: string
entityTypes.tcpConnection.attributes.host.description: IP address and port number in the form addr:port.
entityTypes.tcpConnection.attributes.host.type: string
entityTypes.tcpConnection.attributes.direction.description: Direction of connection establishment in or out of the router.
entityTypes.tcpConnection.attributes.direction.type.0: in
entityTypes.tcpConnection.attributes.direction.type.1: out
entityTypes.tcpConnection.attributes.bytesIn.type: integer
entityTypes.tcpConnection.attributes.bytesIn.graph: true
entityTypes.tcpConnection.attributes.bytesIn.description: The number of bytes sent from client to server on this connection.
entityTypes.tcpConnection.attributes.bytesOut.type: integer
entityTypes.tcpConnection.attributes.bytesOut.graph: true
entityTypes.tcpConnection.attributes.bytesOut.description: The number of bytes sent from server to client on this connection.
entityTypes.tcpConnection.attributes.uptimeSeconds.type: integer
entityTypes.tcpConnection.attributes.uptimeSeconds.graph: true
entityTypes.tcpConnection.attributes.uptimeSeconds.description: The number of seconds since the connection was created.
entityTypes.tcpConnection.attributes.lastInSeconds.type: integer
entityTypes.tcpConnection.attributes.lastInSeconds.graph: true
entityTypes.tcpConnection.attributes.lastInSeconds.description: The number of seconds since a delivery was sent from client to server on this connection.
entityTypes.tcpConnection.attributes.lastOutSeconds.type: integer
entityTypes.tcpConnection.attributes.lastOutSeconds.graph: true
entityTypes.tcpConnection.attributes.lastOutSeconds.description: The number of seconds since a delivery was sent from server to client on this connection.
entityTypes.allocator.description: Memory allocation pool.
entityTypes.allocator.extends: operationalEntity
entityTypes.allocator.attributes.typeName.type: string
entityTypes.allocator.attributes.typeSize.type: integer
entityTypes.allocator.attributes.transferBatchSize.type: integer
entityTypes.allocator.attributes.localFreeListMax.type: integer
entityTypes.allocator.attributes.localFreeListMax.graph: true
entityTypes.allocator.attributes.globalFreeListMax.type: integer
entityTypes.allocator.attributes.globalFreeListMax.graph: true
entityTypes.allocator.attributes.totalAllocFromHeap.type: integer
entityTypes.allocator.attributes.totalAllocFromHeap.graph: true
entityTypes.allocator.attributes.totalFreeToHeap.type: integer
entityTypes.allocator.attributes.totalFreeToHeap.graph: true
entityTypes.allocator.attributes.heldByThreads.type: integer
entityTypes.allocator.attributes.heldByThreads.graph: true
entityTypes.allocator.attributes.batchesRebalancedToThreads.type: integer
entityTypes.allocator.attributes.batchesRebalancedToThreads.graph: true
entityTypes.allocator.attributes.batchesRebalancedToGlobal.type: integer
entityTypes.allocator.attributes.batchesRebalancedToGlobal.graph: true
entityTypes.policy.description: Defines global connection limit
entityTypes.policy.extends: configurationEntity
entityTypes.policy.singleton: true
entityTypes.policy.attributes.maxConnections.type: integer
entityTypes.policy.attributes.maxConnections.default: 65535
entityTypes.policy.attributes.maxConnections.description: The maximum number of concurrent client connections allowed for this router. This limit is always enforced, even if no other policy settings have been defined. The limit is applied to all incoming connections regardless of remote host, authenticated user, or targeted vhost.
entityTypes.policy.attributes.maxConnections.required: false
entityTypes.policy.attributes.maxConnections.create: true
entityTypes.policy.attributes.maxMessageSize.type: integer
entityTypes.policy.attributes.maxMessageSize.default: 0
entityTypes.policy.attributes.maxMessageSize.description: The maximum size in bytes of AMQP message transfers allowed for this router as messages enter the router network. This limit is applied to transfers over user connections and to transfers to interior routers from edge routers. This limit is not applied to interior-to-interior router connections. This limit may be overridden by vhost or by vhost user group settings. A value of zero disables this limit. Administrators are advised not set interior router maximum message sizes so low that edge router management requests or responses are blocked. Administrators are also advised to set edge router maximum message sizes lower than the attached interior router maximum message size.
entityTypes.policy.attributes.maxMessageSize.required: false
entityTypes.policy.attributes.maxMessageSize.create: true
entityTypes.policy.attributes.enableVhostPolicy.type: boolean
entityTypes.policy.attributes.enableVhostPolicy.default: false
entityTypes.policy.attributes.enableVhostPolicy.description: Enables the router to enforce the connection denials and resource limits defined in the configured vhost policies.
entityTypes.policy.attributes.enableVhostPolicy.required: false
entityTypes.policy.attributes.enableVhostPolicy.create: true
entityTypes.policy.attributes.enableVhostNamePatterns.type: boolean
entityTypes.policy.attributes.enableVhostNamePatterns.default: false
entityTypes.policy.attributes.enableVhostNamePatterns.description: Enable vhost name patterns. When false vhost hostnames are treated as literal strings. When true vhost hostnames are treated as match patterns.
entityTypes.policy.attributes.enableVhostNamePatterns.required: false
entityTypes.policy.attributes.enableVhostNamePatterns.create: true
entityTypes.policy.attributes.policyDir.type: path
entityTypes.policy.attributes.policyDir.default: ''
entityTypes.policy.attributes.policyDir.description: The absolute path to a directory that holds vhost policy definition files in JSON format (*.json). The router processes all of the vhost policies in each JSON file that is in this directory.
entityTypes.policy.attributes.policyDir.required: false
entityTypes.policy.attributes.policyDir.create: true
entityTypes.policy.attributes.defaultVhost.type: string
entityTypes.policy.attributes.defaultVhost.default: "$default"
entityTypes.policy.attributes.defaultVhost.description: The name of the default vhost policy. This policy rule set is applied to a connection for which a vhost policy has not otherwise been configured. Processing for the default vhost is enabled by default and set to select vhost '$default'. To disable default vhost processing set defaultVhost to blank or do not define a vhost named '$default'.
entityTypes.policy.attributes.defaultVhost.required: false
entityTypes.policy.attributes.defaultVhost.create: true
entityTypes.policy.attributes.connectionsProcessed.type: integer
entityTypes.policy.attributes.connectionsProcessed.graph: true
entityTypes.policy.attributes.connectionsDenied.type: integer
entityTypes.policy.attributes.connectionsDenied.graph: true
entityTypes.policy.attributes.connectionsCurrent.type: integer
entityTypes.policy.attributes.connectionsCurrent.graph: true
entityTypes.policy.attributes.linksDenied.type: integer
entityTypes.policy.attributes.linksDenied.graph: true
entityTypes.policy.attributes.linksDenied.description: The sum of all vhost sender and receiver denials.
entityTypes.policy.attributes.maxMessageSizeDenied.type: integer
entityTypes.policy.attributes.maxMessageSizeDenied.graph: true
entityTypes.policy.attributes.totalDenials.type: integer
entityTypes.policy.attributes.totalDenials.graph: true
entityTypes.policy.attributes.totalDenials.description: The total number of connection, link, and transfer denials.
entityTypes.vhost.description: AMQP virtual host policy definition of users, user groups, allowed remote hosts, and AMQP restrictions.
entityTypes.vhost.extends: configurationEntity
entityTypes.vhost.operations.0: CREATE
entityTypes.vhost.operations.1: UPDATE
entityTypes.vhost.operations.2: DELETE
entityTypes.vhost.attributes.hostname.type: string
entityTypes.vhost.attributes.hostname.description: The hostname of the vhost. This vhost policy will be applied to any client connection that is directed to this hostname.
entityTypes.vhost.attributes.hostname.required: true
entityTypes.vhost.attributes.hostname.create: true
entityTypes.vhost.attributes.aliases.type: string
entityTypes.vhost.attributes.aliases.description: Alternate hostnames that share this vhost configuration. Hosts named in this attribute are treated as if this vhost was defined with the alias name in the vhost 'hostname' attribute. This attribute is implemented to help with multitenant configurations where multiple vhosts share a common configuration. The string is a comma- or space-separated list of literal hostnames or hostname patterns. A vhost aliases hostname must be unique across all vhost hostnames and all of their aliases.
entityTypes.vhost.attributes.aliases.required: false
entityTypes.vhost.attributes.aliases.create: true
entityTypes.vhost.attributes.aliases.update: true
entityTypes.vhost.attributes.maxConnections.type: integer
entityTypes.vhost.attributes.maxConnections.default: 65535
entityTypes.vhost.attributes.maxConnections.description: The global maximum number of concurrent client connections allowed for this vhost.
entityTypes.vhost.attributes.maxConnections.required: false
entityTypes.vhost.attributes.maxConnections.create: true
entityTypes.vhost.attributes.maxConnections.update: true
entityTypes.vhost.attributes.maxMessageSize.type: integer
entityTypes.vhost.attributes.maxMessageSize.description: Optional maximum size in bytes of AMQP message transfers allowed for connections to this vhost. This limit overrides the policy maxMessageSize value and may be overridden by vhost user group settings. A value of zero disables this limit.
entityTypes.vhost.attributes.maxMessageSize.required: false
entityTypes.vhost.attributes.maxConnectionsPerUser.type: integer
entityTypes.vhost.attributes.maxConnectionsPerUser.default: 65535
entityTypes.vhost.attributes.maxConnectionsPerUser.description: The maximum number of concurrent client connections allowed for any user.
entityTypes.vhost.attributes.maxConnectionsPerUser.required: false
entityTypes.vhost.attributes.maxConnectionsPerUser.create: true
entityTypes.vhost.attributes.maxConnectionsPerUser.update: true
entityTypes.vhost.attributes.maxConnectionsPerHost.type: integer
entityTypes.vhost.attributes.maxConnectionsPerHost.default: 65535
entityTypes.vhost.attributes.maxConnectionsPerHost.description: The maximum number of concurrent client connections allowed for any remote host (the host from which the client is connecting).
entityTypes.vhost.attributes.maxConnectionsPerHost.required: false
entityTypes.vhost.attributes.maxConnectionsPerHost.create: true
entityTypes.vhost.attributes.maxConnectionsPerHost.update: true
entityTypes.vhost.attributes.allowUnknownUser.type: boolean
entityTypes.vhost.attributes.allowUnknownUser.description: Whether unknown users (users who are not members of a defined user group) are allowed to connect to the vhost. Unknown users are assigned to the '$default' user group and receive '$default' settings.
entityTypes.vhost.attributes.allowUnknownUser.default: false
entityTypes.vhost.attributes.allowUnknownUser.required: false
entityTypes.vhost.attributes.allowUnknownUser.create: true
entityTypes.vhost.attributes.allowUnknownUser.update: true
entityTypes.vhost.attributes.groups.type: map
entityTypes.vhost.attributes.groups.description: A map where the key is a vhost user group name and the value is a vhostUserGroupSettings object that holds the settings for that vhost user group.
entityTypes.vhost.attributes.groups.required: false
entityTypes.vhost.attributes.groups.create: true
entityTypes.vhost.attributes.groups.update: true
entityTypes.vhostUserGroupSettings.description: Policy settings for users connecting to a vhost. Configuration files including this section must use .json format.
entityTypes.vhostUserGroupSettings.extends: configurationEntity
entityTypes.vhostUserGroupSettings.attributes.users.type: string
entityTypes.vhostUserGroupSettings.attributes.users.description: A list of authenticated users for this user group. Use commas to separate multiple users. A user may belong to only one vhost user group.
entityTypes.vhostUserGroupSettings.attributes.users.required: true
entityTypes.vhostUserGroupSettings.attributes.remoteHosts.type: string
entityTypes.vhostUserGroupSettings.attributes.remoteHosts.description: A list of remote hosts from which the users may connect. A host can be a hostname, IP address, or IP address range. Use commas to separate multiple hosts. To allow access from all remote hosts, specify a wildcard '*'. To deny access from all remote hosts, leave this attribute blank.
entityTypes.vhostUserGroupSettings.attributes.remoteHosts.required: true
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerUser.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerUser.description: Optional maximum number of connections that may be created by users in this group. This value, if specified, overrides the vhost maxConnectionsPerUser value
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerUser.required: false
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerUser.create: false
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerHost.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerHost.description: Optional maximum number of concurrent connections allowed for any remote host by users in this group. This value, if specified, overrides the vhost maxConnectionsPerHost value
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerHost.required: false
entityTypes.vhostUserGroupSettings.attributes.maxConnectionsPerHost.create: false
entityTypes.vhostUserGroupSettings.attributes.maxMessageSize.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxMessageSize.description: Optional maximum size in bytes of AMQP message transfers allowed for connections created by users in this group. This limit overrides the policy and vhost maxMessageSize values. A value of zero disables this limit.
entityTypes.vhostUserGroupSettings.attributes.maxMessageSize.required: false
entityTypes.vhostUserGroupSettings.attributes.maxFrameSize.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxFrameSize.description: The largest frame, in bytes, that may be sent on this connection. Non-zero policy values overwrite values specified for a listener object (AMQP Open, max-frame-size).
entityTypes.vhostUserGroupSettings.attributes.maxFrameSize.required: false
entityTypes.vhostUserGroupSettings.attributes.maxFrameSize.create: true
entityTypes.vhostUserGroupSettings.attributes.maxSessionWindow.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxSessionWindow.description: The incoming capacity for new AMQP sessions, measured in octets. Non-zero policy values overwrite values specified for a listener object (AMQP Begin, incoming-window).
entityTypes.vhostUserGroupSettings.attributes.maxSessionWindow.required: false
entityTypes.vhostUserGroupSettings.attributes.maxSessionWindow.create: true
entityTypes.vhostUserGroupSettings.attributes.maxSessions.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxSessions.description: The maximum number of sessions that may be created on this connection. Non-zero policy values overwrite values specified for a listener object (AMQP Open, channel-max).
entityTypes.vhostUserGroupSettings.attributes.maxSessions.required: false
entityTypes.vhostUserGroupSettings.attributes.maxSessions.create: true
entityTypes.vhostUserGroupSettings.attributes.maxSenders.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxSenders.description: The maximum number of sending links that may be created on this connection. A value of '0' disables all sender links.
entityTypes.vhostUserGroupSettings.attributes.maxSenders.default: 2147483647
entityTypes.vhostUserGroupSettings.attributes.maxSenders.required: false
entityTypes.vhostUserGroupSettings.attributes.maxSenders.create: true
entityTypes.vhostUserGroupSettings.attributes.maxReceivers.type: integer
entityTypes.vhostUserGroupSettings.attributes.maxReceivers.description: The maximum number of receiving links that may be created on this connection. A value of '0' disables all receiver links.
entityTypes.vhostUserGroupSettings.attributes.maxReceivers.default: 2147483647
entityTypes.vhostUserGroupSettings.attributes.maxReceivers.required: false
entityTypes.vhostUserGroupSettings.attributes.maxReceivers.create: true
entityTypes.vhostUserGroupSettings.attributes.allowDynamicSource.type: boolean
entityTypes.vhostUserGroupSettings.attributes.allowDynamicSource.description: Whether this connection is allowed to create dynamic receiving links (links to resources that do not exist on the peer). A value of 'true' means that users are able to automatically create resources on the peer system.
entityTypes.vhostUserGroupSettings.attributes.allowDynamicSource.default: false
entityTypes.vhostUserGroupSettings.attributes.allowDynamicSource.required: false
entityTypes.vhostUserGroupSettings.attributes.allowDynamicSource.create: true
entityTypes.vhostUserGroupSettings.attributes.allowAnonymousSender.type: boolean
entityTypes.vhostUserGroupSettings.attributes.allowAnonymousSender.description: 'Whether this connection is allowed to create sending links if the sender does not provide a target address. By prohibiting anonymous senders, the router only needs to verify once, when the link is created, that the sender is permitted to send messages to the target address. The router does not need to verify each message that is sent on the link. A value of ''true'' means that users may send messages to any address. Allowing anonymous senders can also decrease performance: if the sender does not specify a target address, then the router must parse each message to determine how to route it.'
entityTypes.vhostUserGroupSettings.attributes.allowAnonymousSender.default: false
entityTypes.vhostUserGroupSettings.attributes.allowAnonymousSender.required: false
entityTypes.vhostUserGroupSettings.attributes.allowAnonymousSender.create: true
entityTypes.vhostUserGroupSettings.attributes.allowUserIdProxy.type: boolean
entityTypes.vhostUserGroupSettings.attributes.allowUserIdProxy.description: Whether this connection is allowed to send messages with a user ID that is different than the connection's authenticated user name.
entityTypes.vhostUserGroupSettings.attributes.allowUserIdProxy.default: false
entityTypes.vhostUserGroupSettings.attributes.allowUserIdProxy.required: false
entityTypes.vhostUserGroupSettings.attributes.allowUserIdProxy.create: true
entityTypes.vhostUserGroupSettings.attributes.allowAdminStatusUpdate.type: boolean
entityTypes.vhostUserGroupSettings.attributes.allowAdminStatusUpdate.description: 'Whether this connection is allowed to update the admin status of other connections. Note: Inter-router connections cannot be deleted at any time.'
entityTypes.vhostUserGroupSettings.attributes.allowAdminStatusUpdate.default: true
entityTypes.vhostUserGroupSettings.attributes.allowAdminStatusUpdate.required: false
entityTypes.vhostUserGroupSettings.attributes.allowAdminStatusUpdate.create: true
entityTypes.vhostUserGroupSettings.attributes.sources.type: string
entityTypes.vhostUserGroupSettings.attributes.sources.description: A list of source addresses from which users in this group may receive messages. To specify multiple addresses, separate the addresses with either a comma or a space. If you do not specify any addresses, users in this group are not allowed to receive messages from any addresses. You can use the substitution token `${user}` to specify an address that contains a user's authenticated user name. You can use an asterisk ('*') wildcard to match one or more characters in an address. However, this wildcard is only recognized if it is the last character in the address name. You may specify attributes 'sources' or 'sourcePattern' but not both at the same time.
entityTypes.vhostUserGroupSettings.attributes.sources.required: false
entityTypes.vhostUserGroupSettings.attributes.sources.create: true
entityTypes.vhostUserGroupSettings.attributes.targets.type: string
entityTypes.vhostUserGroupSettings.attributes.targets.description: A list of target addresses to which users in this group may send messages. To specify multiple addresses, separate the addresses with either a comma or a space. If you do not specify any addresses, users in this group are not allowed to send messages to any addresses. You can use the substitution token `${user}` to specify an address that contains a user's authenticated user name. You can use an asterisk ('*') wildcard to match one or more characters in an address. However, this wildcard is only recognized if it is the last character in the address name. You may specify attributes 'targets' or 'targetPattern' but not both at the same time.
entityTypes.vhostUserGroupSettings.attributes.targets.required: false
entityTypes.vhostUserGroupSettings.attributes.targets.create: true
entityTypes.vhostUserGroupSettings.attributes.sourcePattern.type: string
entityTypes.vhostUserGroupSettings.attributes.sourcePattern.description: 'A wildcarded pattern for matching source addresses from which users in this group may receive messages. The pattern consists of one or more tokens separated by a forward slash ''/''. A token can be one of the following: a * character, a # character, or a sequence of characters that do not include /, *, or #.  The * token matches any single token.  The # token matches zero or more tokens. * has higher precedence than #, and exact match has the highest precedence. To specify multiple addresses, separate the addresses with either a comma or a space. You can use the text string `${user}` in a token to specify an address that contains a user''s authenticated user name. If you do not specify any addresses, users in this group are not allowed to receive messages from any addresses. You may specify attributes ''sources'' or ''sourcePattern'' but not both at the same time.'
entityTypes.vhostUserGroupSettings.attributes.sourcePattern.create: true
entityTypes.vhostUserGroupSettings.attributes.sourcePattern.required: false
entityTypes.vhostUserGroupSettings.attributes.targetPattern.type: string
entityTypes.vhostUserGroupSettings.attributes.targetPattern.description: 'A wildcarded pattern for matching target addresses to which users in this group may send messages. The pattern consists of one or more tokens separated by a forward slash ''/''. A token can be one of the following: a * character, a # character, or a sequence of characters that do not include /, *, or #.  The * token matches any single token.  The # token matches zero or more tokens. * has higher precedence than #, and exact match has the highest precedence. To specify multiple addresses, separate the addresses with either a comma or a space. You can use the text string `${user}` in a token to specify an address that contains a user''s authenticated user name. If you do not specify any addresses, users in this group are not allowed to send messages to any addresses. You may specify attributes ''targets'' or ''targetPattern'' but not both at the same time.'
entityTypes.vhostUserGroupSettings.attributes.targetPattern.create: true
entityTypes.vhostUserGroupSettings.attributes.targetPattern.required: false
entityTypes.vhostStats.description: Virtual host connection and access statistics.
entityTypes.vhostStats.extends: operationalEntity
entityTypes.vhostStats.attributes.hostname.type: string
entityTypes.vhostStats.attributes.hostname.description: The vhost name.
entityTypes.vhostStats.attributes.connectionsApproved.type: integer
entityTypes.vhostStats.attributes.connectionsApproved.graph: true
entityTypes.vhostStats.attributes.connectionsDenied.type: integer
entityTypes.vhostStats.attributes.connectionsDenied.graph: true
entityTypes.vhostStats.attributes.connectionsCurrent.type: integer
entityTypes.vhostStats.attributes.connectionsCurrent.graph: true
entityTypes.vhostStats.attributes.perUserState.type: map
entityTypes.vhostStats.attributes.perUserState.description: A map where the key is the authenticated user name and the value is a list of the user's connections.
entityTypes.vhostStats.attributes.perHostState.type: map
entityTypes.vhostStats.attributes.perHostState.description: A map where the key is the host name and the value is a list of the host's connections.
entityTypes.vhostStats.attributes.sessionDenied.type: integer
entityTypes.vhostStats.attributes.sessionDenied.graph: true
entityTypes.vhostStats.attributes.senderDenied.type: integer
entityTypes.vhostStats.attributes.senderDenied.graph: true
entityTypes.vhostStats.attributes.receiverDenied.type: integer
entityTypes.vhostStats.attributes.receiverDenied.graph: true
entityTypes.vhostStats.attributes.maxMessageSizeDenied.type: integer
entityTypes.vhostStats.attributes.maxMessageSizeDenied.graph: true
entityTypes.dummy.description: Dummy entity for test purposes.
entityTypes.dummy.extends: entity
entityTypes.dummy.operations.0: CREATE
entityTypes.dummy.operations.1: READ
entityTypes.dummy.operations.2: UPDATE
entityTypes.dummy.operations.3: DELETE
entityTypes.dummy.operations.4: CALLME
entityTypes.dummy.attributes.arg1.type: string
entityTypes.dummy.attributes.arg1.create: true
entityTypes.dummy.attributes.arg1.update: true
entityTypes.dummy.attributes.arg2.type: string
entityTypes.dummy.attributes.arg2.create: true
entityTypes.dummy.attributes.arg2.update: true
entityTypes.dummy.attributes.num1.type: integer
entityTypes.dummy.attributes.num1.create: true
entityTypes.dummy.attributes.num1.update: true
entityTypes.dummy.attributes.num2.type: integer
entityTypes.dummy.attributes.num2.create: true
entityTypes.dummy.attributes.num2.update: true
